{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Auto-Generated Documentation Index","text":"<p>Welcome to the Nautee documentation portal. Below is the list of generated file summaries:</p> <ul> <li>\ud83d\udee0 Autodoc</li> <li>\ud83e\udde0 Claude Folder Review</li> <li>\ud83d\udcac Claude Review</li> <li>\ud83d\udcc8 Changelog</li> <li>\ud83d\udce6 Batched Folder Review</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/","title":"autodoc tools autodoc py 2025 05 31T15 23 36","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#python-auto-documentation-generator","title":"Python Auto-Documentation Generator","text":"<p>A Python script that automatically generates professional documentation for Python source files using Anthropic's Claude AI model.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#overview","title":"Overview","text":"<p>This tool recursively scans directories for Python files and generates comprehensive Markdown documentation using Claude AI. It creates a complete documentation website with an index page, suitable for deployment on GitHub Pages.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#features","title":"Features","text":"<ul> <li>Recursive File Discovery: Automatically finds all Python files in the target directory and subdirectories</li> <li>AI-Powered Documentation: Uses Claude AI to generate professional, clear documentation</li> <li>GitHub Pages Ready: Creates <code>.nojekyll</code> file and structured output for easy deployment</li> <li>Automatic Indexing: Generates an index page linking to all documented files</li> <li>Error Handling: Gracefully handles errors and provides clear status messages</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li><code>anthropic</code> library</li> <li><code>python-dotenv</code> library</li> <li>Anthropic API key</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Create a <code>.env</code> file in the project root:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#usage","title":"Usage","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#basic-usage","title":"Basic Usage","text":"<pre><code>python autodoc_generator.py [target_directory]\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#examples","title":"Examples","text":"<pre><code># Document current directory\npython autodoc_generator.py\n\n# Document specific directory\npython autodoc_generator.py /path/to/your/project\n\n# Document with relative path\npython autodoc_generator.py ./src\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#environment-variables","title":"Environment Variables","text":"Variable Description Default <code>ANTHROPIC_API_KEY</code> Your Anthropic API key Required <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#file-filtering","title":"File Filtering","text":"<p>The script automatically excludes: - Test files (starting with <code>test_</code>) - <code>__init__.py</code> files - Non-Python files</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#output-structure","title":"Output Structure","text":"<p>The script creates a <code>docs/</code> directory with the following structure:</p> <pre><code>docs/\n\u251c\u2500\u2500 .nojekyll                    # GitHub Pages configuration\n\u251c\u2500\u2500 index.md                     # Main index page\n\u251c\u2500\u2500 autodoc_filename_timestamp.md\n\u251c\u2500\u2500 autodoc_another_file_timestamp.md\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#file-naming-convention","title":"File Naming Convention","text":"<p>Generated documentation files follow this pattern:</p> <pre><code>autodoc_{relative_path}_{timestamp}.md\n</code></pre> <p>Where: - <code>relative_path</code>: Source file path with <code>/</code> and <code>.</code> replaced by <code>_</code> - <code>timestamp</code>: Generation time in <code>YYYY-MM-DDTHH-MM-SS</code> format</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#output-format","title":"Output Format","text":"<p>Each generated documentation file includes:</p> <ol> <li>Header Comment: Contains generation timestamp and source file path</li> <li>AI-Generated Content: Professional documentation created by Claude</li> <li>Markdown Formatting: Clean, readable structure with proper headings and code blocks</li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#error-handling","title":"Error Handling","text":"<p>The script provides clear feedback: - \u2705 Success messages for documented files - \u274c Error messages with specific failure details - \u26a0\ufe0f Warnings for edge cases (no files found) - \ud83d\udcc2 Progress indicators showing file counts</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#integration-with-github-pages","title":"Integration with GitHub Pages","text":"<p>The generated documentation is GitHub Pages ready: - <code>.nojekyll</code> file prevents Jekyll processing - Clean Markdown structure - Relative links in index - Professional formatting</p> <p>To deploy: 1. Push the <code>docs/</code> folder to your repository 2. Enable GitHub Pages with <code>docs/</code> as the source 3. Access your documentation at <code>https://username.github.io/repository</code></p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#limitations","title":"Limitations","text":"<ul> <li>Requires internet connection for Claude API calls</li> <li>API rate limits may apply based on your Anthropic plan</li> <li>Maximum 1500 tokens per documentation request</li> <li>Processes files sequentially (not parallelized)</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#error-recovery","title":"Error Recovery","text":"<p>If the script encounters errors: - Individual file failures don't stop the entire process - Detailed error messages help identify issues - Successfully processed files are still saved - Index is generated with all successful entries</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-23-36/#api-usage","title":"API Usage","text":"<p>The script makes one API call per Python file with: - Model: Configurable via environment variable - Max tokens: 1500 (suitable for most documentation needs) - Role: User with technical writing prompt</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/","title":"autodoc tools autodoc py 2025 05 31T15 39 32","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#python-auto-documentation-generator","title":"Python Auto-Documentation Generator","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#overview","title":"Overview","text":"<p>This Python script automatically generates comprehensive documentation for Python source code using Claude AI. It recursively scans directories for Python files, processes them through the Anthropic Claude API, and outputs professional Markdown documentation suitable for GitHub Pages deployment.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#features","title":"Features","text":"<ul> <li>Recursive File Discovery: Automatically finds all <code>.py</code> files in target directory and subdirectories</li> <li>AI-Powered Documentation: Uses Claude AI to generate professional, clear documentation</li> <li>GitHub Pages Ready: Creates <code>.nojekyll</code> file and structured output for GitHub Pages</li> <li>Index Generation: Automatically creates a navigable index of all documented files</li> <li>Error Handling: Graceful error handling with informative console output</li> <li>Timestamped Output: Each documentation file includes generation timestamp</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#environment-configuration","title":"Environment Configuration","text":"<p>Create a <code>.env</code> file in your project root:</p> <pre><code>ANTHROPIC_API_KEY=your_claude_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to this model\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#usage","title":"Usage","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#basic-usage","title":"Basic Usage","text":"<pre><code>python autodoc_generator.py\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#specify-target-directory","title":"Specify Target Directory","text":"<pre><code>python autodoc_generator.py /path/to/your/python/project\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#command-line-arguments","title":"Command Line Arguments","text":"Argument Description Default <code>target_path</code> Directory to scan for Python files Current directory (<code>.</code>)"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#output-structure","title":"Output Structure","text":"<p>The script generates the following output structure:</p> <pre><code>docs/\n\u251c\u2500\u2500 .nojekyll                    # GitHub Pages configuration\n\u251c\u2500\u2500 index.md                     # Navigation index\n\u251c\u2500\u2500 autodoc_file1_py_timestamp.md\n\u251c\u2500\u2500 autodoc_file2_py_timestamp.md\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#file-naming-convention","title":"File Naming Convention","text":"<p>Generated documentation files follow this pattern:</p> <pre><code>autodoc_{relative_path}_{timestamp}.md\n</code></pre> <p>Where: - <code>relative_path</code>: Source file path with <code>/</code> and <code>.</code> replaced by <code>_</code> - <code>timestamp</code>: Generation time in <code>YYYY-MM-DDTHH-MM-SS</code> format</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#file-processing-rules","title":"File Processing Rules","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#included-files","title":"Included Files","text":"<ul> <li>All <code>.py</code> files found recursively</li> <li>Files in subdirectories</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#excluded-files","title":"Excluded Files","text":"<ul> <li>Test files (starting with <code>test_</code>)</li> <li><code>__init__.py</code> files</li> <li>Non-Python files</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#configuration-options","title":"Configuration Options","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#environment-variables","title":"Environment Variables","text":"Variable Description Default Value <code>ANTHROPIC_API_KEY</code> Claude API authentication key Required <code>ANTHROPIC_MODEL</code> Claude model to use for documentation <code>claude-sonnet-4-20250514</code>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#customizable-parameters","title":"Customizable Parameters","text":"<ul> <li>Output Directory: Hardcoded to <code>docs/</code> (line 11)</li> <li>Token Limit: Set to 1500 tokens per request (line 50)</li> <li>File Extensions: Currently <code>.py</code> only (line 22)</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#error-handling","title":"Error Handling","text":"<p>The script includes comprehensive error handling:</p> <ul> <li>Missing Files: Graceful exit if no Python files found</li> <li>API Errors: Individual file failures don't stop the entire process</li> <li>File I/O Errors: Detailed error messages for debugging</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#example-output","title":"Example Output","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#console-output","title":"Console Output","text":"<pre><code>\ud83d\udcc2 Found 5 Python files to document.\n\u2705 Documented: ./main.py \u2192 docs/autodoc_main_py_2024-01-15T14-30-25.md\n\u2705 Documented: ./utils/helper.py \u2192 docs/autodoc_utils_helper_py_2024-01-15T14-30-26.md\n\ud83d\udcd8 Index created at: docs/index.md\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#generated-documentation-header","title":"Generated Documentation Header","text":"<pre><code>&lt;!--\nThis documentation was auto-generated by Claude on 2024-01-15T14-30-25.\nSource file: ./main.py\n--&gt;\n\n# Your Generated Documentation Here...\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#integration-with-github-pages","title":"Integration with GitHub Pages","text":"<p>The script automatically: 1. Creates a <code>.nojekyll</code> file to bypass Jekyll processing 2. Generates a navigable <code>index.md</code> file 3. Uses GitHub Pages-compatible Markdown format</p> <p>To deploy: 1. Push the <code>docs/</code> directory to your GitHub repository 2. Enable GitHub Pages with source set to the <code>docs/</code> folder 3. Access your documentation at <code>https://yourusername.github.io/yourrepo/</code></p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#common-issues","title":"Common Issues","text":"<ol> <li>Missing API Key: Ensure <code>ANTHROPIC_API_KEY</code> is set in <code>.env</code></li> <li>No Files Found: Check target directory contains <code>.py</code> files</li> <li>API Rate Limits: Add delays between requests if needed</li> <li>Permission Errors: Ensure write permissions for output directory</li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#debug-tips","title":"Debug Tips","text":"<ul> <li>Check console output for specific error messages</li> <li>Verify <code>.env</code> file is in the correct location</li> <li>Ensure target directory path is correct</li> <li>Validate API key has sufficient credits</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-39-32/#limitations","title":"Limitations","text":"<ul> <li>File Size: Large files may exceed token limits</li> <li>API Costs: Each file generates an API request</li> <li>Language Support: Currently Python-only</li> <li>Model Dependency: Requires active Anthropic API access</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/","title":"autodoc tools autodoc py 2025 05 31T15 51 27","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#python-documentation-generator","title":"Python Documentation Generator","text":"<p>An automated documentation generator that uses Claude AI to create comprehensive documentation for Python codebases.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#overview","title":"Overview","text":"<p>This tool scans Python files in a specified directory, sends each file to Claude AI for analysis, and generates professional Markdown documentation. It creates a complete documentation site with an index page and individual documentation files for each Python module.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#features","title":"Features","text":"<ul> <li>Recursive Python file discovery - Automatically finds all <code>.py</code> files in the target directory</li> <li>AI-powered documentation - Uses Claude to generate high-quality, professional documentation</li> <li>GitHub Pages ready - Creates HTML index and <code>.nojekyll</code> file for GitHub Pages deployment</li> <li>Organized output - Generates timestamped documentation files with a master index</li> <li>Error handling - Gracefully handles file processing errors and continues with remaining files</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Anthropic API key</li> <li>Required packages: <code>anthropic</code>, <code>python-dotenv</code></li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#installation","title":"Installation","text":"<ol> <li> <p>Install required dependencies:    <code>bash    pip install anthropic python-dotenv</code></p> </li> <li> <p>Create a <code>.env</code> file with your Anthropic API configuration:    <code>env    ANTHROPIC_API_KEY=your_api_key_here    ANTHROPIC_MODEL=claude-sonnet-4-20250514</code></p> </li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#usage","title":"Usage","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#basic-usage","title":"Basic Usage","text":"<p>Generate documentation for the current directory:</p> <pre><code>python doc_generator.py\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#specify-target-directory","title":"Specify Target Directory","text":"<p>Generate documentation for a specific directory:</p> <pre><code>python doc_generator.py /path/to/your/project\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#environment-variables","title":"Environment Variables","text":"Variable Description Default <code>ANTHROPIC_API_KEY</code> Your Anthropic API key Required <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#file-filtering","title":"File Filtering","text":"<p>The tool automatically excludes: - Test files (starting with <code>test_</code>) - <code>__init__.py</code> files - Non-Python files</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#output-structure","title":"Output Structure","text":"<pre><code>docs/\n\u251c\u2500\u2500 .nojekyll                    # GitHub Pages configuration\n\u251c\u2500\u2500 index.html                   # Web-friendly landing page\n\u251c\u2500\u2500 index.md                     # Documentation index in Markdown\n\u2514\u2500\u2500 autodoc_[filename]_[timestamp].md  # Individual documentation files\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#generated-files","title":"Generated Files","text":"<ul> <li><code>.nojekyll</code> - Tells GitHub Pages to serve files directly</li> <li><code>index.html</code> - Web landing page with navigation</li> <li><code>index.md</code> - Master index linking to all documentation</li> <li>Documentation files - Individual Markdown files for each Python module</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#example-output","title":"Example Output","text":"<p>The tool generates comprehensive documentation including:</p> <ul> <li>Module overview and purpose</li> <li>Function and class descriptions</li> <li>Parameter documentation</li> <li>Return value descriptions</li> <li>Usage examples</li> <li>Code structure analysis</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#error-handling","title":"Error Handling","text":"<ul> <li>Missing API key - Script will fail gracefully if Anthropic API key is not configured</li> <li>File read errors - Individual file errors are logged but don't stop processing</li> <li>API errors - Network or API issues are caught and reported per file</li> <li>No Python files - Script exits cleanly if no qualifying Python files are found</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#limitations","title":"Limitations","text":"<ul> <li>Token limits - Large files may be truncated due to Claude's token limits (1500 max tokens)</li> <li>API costs - Each file generates an API call to Anthropic</li> <li>File exclusions - Currently excludes test files and <code>__init__.py</code> files</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#github-pages-deployment","title":"GitHub Pages Deployment","text":"<p>The generated documentation is ready for GitHub Pages:</p> <ol> <li>Commit the <code>docs/</code> directory to your repository</li> <li>Enable GitHub Pages in repository settings</li> <li>Set source to \"Deploy from a branch\" and select <code>main</code> branch, <code>/docs</code> folder</li> <li>Your documentation will be available at <code>https://[username].github.io/[repository]/</code></li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#development","title":"Development","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#adding-new-file-types","title":"Adding New File Types","text":"<p>To support additional file types, modify the file discovery logic:</p> <pre><code>if file.endswith((\".py\", \".js\")) and not file.startswith(\"test_\"):\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#customizing-documentation-prompts","title":"Customizing Documentation Prompts","text":"<p>Modify the <code>prompt</code> variable to adjust the documentation style and content focus.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T15-51-27/#changing-output-format","title":"Changing Output Format","text":"<p>The tool can be extended to support other output formats by modifying the response processing logic.</p> <p>This documentation was generated to demonstrate the capabilities of the Python Documentation Generator tool.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/","title":"autodoc tools autodoc py 2025 05 31T16 04 15","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#auto-documentation-generator","title":"Auto-Documentation Generator","text":"<p>This Python script automatically generates professional documentation for Python codebases using Anthropic's Claude AI. It recursively processes Python files in a target directory and creates comprehensive Markdown documentation.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#overview","title":"Overview","text":"<p>The script leverages Claude's natural language processing capabilities to analyze Python source code and generate clear, professional documentation in Markdown format. It's designed for automated documentation workflows and integrates seamlessly with GitHub Pages.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#features","title":"Features","text":"<ul> <li>Recursive File Processing: Automatically discovers and processes all Python files in a target directory</li> <li>AI-Powered Documentation: Uses Claude AI to generate professional, technical documentation</li> <li>GitHub Pages Ready: Creates <code>.nojekyll</code> file and HTML index for GitHub Pages deployment</li> <li>Organized Output: Generates timestamped documentation files with a centralized index</li> <li>Error Handling: Gracefully handles processing errors and continues with remaining files</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#requirements","title":"Requirements","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#dependencies","title":"Dependencies","text":"<pre><code>import os\nimport sys\nimport anthropic\nfrom dotenv import load_dotenv\nfrom datetime import datetime\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#environment-variables","title":"Environment Variables","text":"<ul> <li><code>ANTHROPIC_API_KEY</code>: Your Anthropic API key (required)</li> <li><code>ANTHROPIC_MODEL</code>: Claude model to use (optional, defaults to \"claude-sonnet-4-20250514\")</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#configuration","title":"Configuration","text":"<p>The script uses environment variables loaded from a <code>.env</code> file:</p> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#usage","title":"Usage","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#command-line","title":"Command Line","text":"<pre><code>python script.py [target_path]\n</code></pre> <p>Parameters: - <code>target_path</code> (optional): Directory to scan for Python files. Defaults to current directory (<code>.</code>)</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#examples","title":"Examples","text":"<pre><code># Document current directory\npython script.py\n\n# Document specific directory\npython script.py /path/to/your/project\n\n# Document relative path\npython script.py ./src\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#output-structure","title":"Output Structure","text":"<p>The script creates a <code>docs/</code> directory with the following structure:</p> <pre><code>docs/\n\u251c\u2500\u2500 .nojekyll                    # GitHub Pages configuration\n\u251c\u2500\u2500 index.html                   # HTML landing page\n\u251c\u2500\u2500 index.md                     # Markdown index of all documentation\n\u2514\u2500\u2500 autodoc_[file]_[timestamp].md # Generated documentation files\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#file-naming-convention","title":"File Naming Convention","text":"<p>Documentation files follow this pattern:</p> <pre><code>autodoc_{relative_path}_{timestamp}.md\n</code></pre> <p>Where: - <code>{relative_path}</code>: Source file path with <code>/</code> and <code>.</code> replaced by <code>_</code> - <code>{timestamp}</code>: Generation timestamp in <code>YYYY-MM-DDTHH-MM-SS</code> format</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#processing-logic","title":"Processing Logic","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#file-discovery","title":"File Discovery","text":"<ol> <li>Recursive Scanning: Uses <code>os.walk()</code> to traverse directory tree</li> <li>File Filtering: Includes only <code>.py</code> files, excluding:</li> <li>Test files (starting with <code>test_</code>)</li> <li><code>__init__.py</code> files</li> <li>Path Resolution: Converts absolute paths to relative paths for clean output</li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#documentation-generation","title":"Documentation Generation","text":"<ol> <li>Source Code Reading: Reads Python file content</li> <li>AI Processing: Sends code to Claude with professional documentation prompt</li> <li>Markdown Generation: Receives structured Markdown documentation</li> <li>File Output: Saves documentation with metadata header</li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#index-creation","title":"Index Creation","text":"<ul> <li>HTML Index: Creates user-friendly landing page with styling</li> <li>Markdown Index: Generates linked list of all documented files</li> <li>GitHub Pages Support: Ensures compatibility with GitHub Pages rendering</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#error-handling","title":"Error Handling","text":"<p>The script implements robust error handling:</p> <ul> <li>File Access Errors: Continues processing if individual files cannot be read</li> <li>API Errors: Logs Claude API errors and continues with remaining files</li> <li>Missing Files: Exits gracefully if no Python files are found</li> <li>Directory Creation: Safely creates output directory if it doesn't exist</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#technical-implementation-details","title":"Technical Implementation Details","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#ai-integration","title":"AI Integration","text":"<pre><code>response = client.messages.create(\n    model=model,\n    max_tokens=1500,\n    messages=[{\"role\": \"user\", \"content\": prompt}]\n)\n</code></pre> <ul> <li>Token Limit: Set to 1500 tokens for comprehensive documentation</li> <li>Professional Prompt: Instructs Claude to generate technical documentation</li> <li>Error Recovery: Handles API failures gracefully</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#github-pages-optimization","title":"GitHub Pages Optimization","text":"<ul> <li><code>.nojekyll</code> File: Prevents Jekyll processing on GitHub Pages</li> <li>HTML Landing Page: Provides user-friendly entry point</li> <li>Timestamp Tracking: Shows last update time for freshness indication</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#best-practices","title":"Best Practices","text":"<ol> <li>API Key Security: Store API keys in <code>.env</code> file, never commit to version control</li> <li>Rate Limiting: Be mindful of API rate limits when processing large codebases</li> <li>Output Review: Review generated documentation for accuracy and completeness</li> <li>Version Control: Consider gitignoring the <code>docs/</code> directory if regenerating frequently</li> </ol>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#limitations","title":"Limitations","text":"<ul> <li>File Size: Very large Python files may exceed Claude's context window</li> <li>Token Limit: Complex files may require higher token limits for complete documentation</li> <li>API Dependency: Requires active internet connection and valid Anthropic API access</li> <li>Language Support: Currently processes only Python files (<code>.py</code> extension)</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#integration-examples","title":"Integration Examples","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-04-15/#cicd-pipeline","title":"CI/CD Pipeline","text":"<pre><code># GitHub Actions example\n- name: Generate Documentation\n  run: |\n    pip install anthropic python-dotenv\n    python autodoc.py ./src\n\n- name: Deploy to GitHub Pages\n  uses: peaceiris/actions-gh-pages@v3\n  with:\n    github_token: ${{ secrets.GITHUB_TOKEN }}\n    publish_dir: ./docs\n</code></pre> <p>This documentation generator streamlines the process of maintaining up-to-date, professional documentation for Python projects while leveraging the power of AI for consistent, high-quality output.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/","title":"Autodoc","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#python-code-documentation-generator","title":"Python Code Documentation Generator","text":"<p>A Python script that automatically generates professional documentation for Python codebases using Anthropic's Claude AI model.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#overview","title":"Overview","text":"<p>This tool recursively scans a directory for Python files, generates comprehensive documentation using Claude AI, and creates a static documentation site ready for deployment to GitHub Pages.</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#features","title":"Features","text":"<ul> <li>Automated Documentation: Generates professional Markdown documentation for Python files using Claude AI</li> <li>Recursive File Discovery: Automatically finds all Python files in a directory tree</li> <li>GitHub Pages Ready: Creates output compatible with GitHub Pages hosting</li> <li>Index Generation: Automatically creates navigation index for all documented files</li> <li>Flexible Configuration: Supports custom models and environment-based configuration</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Anthropic API key</li> <li>Required Python packages:</li> <li><code>anthropic</code></li> <li><code>python-dotenv</code></li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Create a <code>.env</code> file with your Anthropic API credentials:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#usage","title":"Usage","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#basic-usage","title":"Basic Usage","text":"<p>Document the current directory:</p> <pre><code>python doc_generator.py\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#custom-target-directory","title":"Custom Target Directory","text":"<p>Document a specific directory:</p> <pre><code>python doc_generator.py /path/to/your/project\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#environment-variables","title":"Environment Variables","text":"Variable Description Default Required <code>ANTHROPIC_API_KEY</code> Your Anthropic API key None Yes <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code> No"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#file-filtering","title":"File Filtering","text":"<p>The script automatically excludes: - Test files (starting with <code>test_</code>) - <code>__init__.py</code> files - Non-Python files</p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#output-structure","title":"Output Structure","text":"<pre><code>docs/\n\u251c\u2500\u2500 .nojekyll                    # GitHub Pages configuration\n\u251c\u2500\u2500 index.html                   # Web-friendly landing page\n\u251c\u2500\u2500 index.md                     # Documentation index\n\u2514\u2500\u2500 autodoc_[file]_[timestamp].md # Generated documentation files\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#generated-documentation-features","title":"Generated Documentation Features","text":"<p>Each generated documentation file includes:</p> <ul> <li>Header Comments: Source file path and generation timestamp</li> <li>Professional Formatting: Clean Markdown structure</li> <li>Comprehensive Coverage: Functions, classes, and module-level documentation</li> <li>Technical Accuracy: AI-powered analysis of code structure and purpose</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling:</p> <ul> <li>File Access Errors: Gracefully handles permission issues</li> <li>API Errors: Reports Claude API communication problems</li> <li>Missing Files: Validates input and provides helpful error messages</li> <li>Empty Directories: Warns when no Python files are found</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#github-pages-deployment","title":"GitHub Pages Deployment","text":"<p>The generated documentation is ready for GitHub Pages:</p> <ol> <li>The <code>.nojekyll</code> file ensures proper rendering</li> <li><code>index.html</code> provides a web-friendly entry point</li> <li>All documentation uses standard Markdown formatting</li> </ol> <p>To deploy: 1. Commit the <code>docs/</code> directory to your repository 2. Enable GitHub Pages with <code>docs/</code> as the source folder 3. Access your documentation at <code>https://[username].github.io/[repository]/</code></p>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#output-examples","title":"Output Examples","text":""},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#console-output","title":"Console Output","text":"<pre><code>\ud83d\udcc2 Found 5 Python files to document.\n\u2705 Documented: src/main.py \u2192 docs/autodoc_src_main_py_2024-01-15T14-30-25.md\n\u2705 Documented: utils/helpers.py \u2192 docs/autodoc_utils_helpers_py_2024-01-15T14-30-27.md\n\ud83d\udcd8 Index created at: docs/index.md\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#generated-documentation-structure","title":"Generated Documentation Structure","text":"<pre><code>&lt;!--\nThis documentation was auto-generated by Claude on 2024-01-15T14-30-25.\nSource file: src/main.py\n--&gt;\n\n# Module Documentation\n[AI-generated professional documentation content]\n</code></pre>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#limitations","title":"Limitations","text":"<ul> <li>Requires active internet connection for Claude API</li> <li>API rate limits may affect processing speed for large codebases</li> <li>Documentation quality depends on code clarity and structure</li> <li>Costs associated with Claude API usage</li> </ul>"},{"location":"autodoc_tools_autodoc_py_2025-05-31T16-11-45/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Updates: Re-run after significant code changes</li> <li>Review Generated Docs: Verify AI-generated content for accuracy</li> <li>Version Control: Commit documentation updates with code changes</li> <li>API Key Security: Never commit <code>.env</code> files to version control</li> </ol>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/","title":"autodoc tools changelog py 2025 05 31T15 24 48","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#git-changelog-generator","title":"Git Changelog Generator","text":"<p>A Python script that automatically generates professional release notes from Git commit history using the Anthropic Claude API.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#overview","title":"Overview","text":"<p>This tool extracts recent commit messages from a Git repository and uses AI to transform them into well-formatted, readable changelog entries organized by categories such as Features, Fixes, and Improvements.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#features","title":"Features","text":"<ul> <li>Extracts Git commit history automatically</li> <li>AI-powered commit message summarization</li> <li>Organized changelog with categorical sections</li> <li>Timestamped output files</li> <li>Environment-based configuration</li> <li>Error handling for Git operations</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Git repository (script must be run from within a Git repo)</li> <li>Anthropic API key</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#dependencies","title":"Dependencies","text":"<pre><code>anthropic\npython-dotenv\n</code></pre> <p>Install dependencies:</p> <pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root with the following variables:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre> Variable Required Default Description <code>ANTHROPIC_API_KEY</code> Yes - Your Anthropic API key for Claude access <code>ANTHROPIC_MODEL</code> No <code>claude-sonnet-4-20250514</code> Claude model to use for generation"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#usage","title":"Usage","text":"<ol> <li>Navigate to your Git repository directory</li> <li>Ensure your <code>.env</code> file is configured</li> <li>Run the script:</li> </ol> <pre><code>python changelog_generator.py\n</code></pre> <p>The script will: 1. Extract the last 10 commit messages 2. Send them to Claude for summarization 3. Generate formatted release notes 4. Save the output to <code>output/changelog_YYYY-MM-DDTHH-MM-SS.txt</code></p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#output","title":"Output","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#file-location","title":"File Location","text":"<p>Generated changelogs are saved to:</p> <pre><code>output/changelog_YYYY-MM-DDTHH-MM-SS.txt\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#sample-output-format","title":"Sample Output Format","text":"<pre><code># Release Notes\n\n## Features\n- Added user authentication system\n- Implemented dashboard analytics\n\n## Fixes\n- Fixed login redirect issue\n- Resolved database connection timeout\n\n## Improvements\n- Enhanced error handling\n- Optimized query performance\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling:</p> <ul> <li>Git Operations: If Git commands fail (e.g., not in a Git repo), the script continues with a fallback message</li> <li>API Errors: Anthropic API errors will be raised and should be handled by the calling environment</li> <li>File Operations: Directory creation is handled safely with <code>exist_ok=True</code></li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#customization","title":"Customization","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#commit-count","title":"Commit Count","text":"<p>Modify the number of commits to analyze by changing the <code>-n</code> parameter:</p> <pre><code>git_log = subprocess.check_output([\n    \"git\", \"log\", \"--pretty=format:* %s\", \"-n\", \"20\"  # Changed from 10 to 20\n]).decode()\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#prompt-customization","title":"Prompt Customization","text":"<p>Modify the <code>prompt</code> variable to change how the AI processes commits:</p> <pre><code>prompt = f\"\"\"Custom instructions for changelog generation...\nCommits:\n{git_log}\n\"\"\"\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#output-format","title":"Output Format","text":"<p>Change the output file format or location:</p> <pre><code>out_path = f\"releases/changelog_{timestamp}.md\"  # Save as Markdown\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#api-usage","title":"API Usage","text":"<p>The script uses the Anthropic Messages API with the following parameters:</p> <ul> <li>Model: Configurable via environment variable</li> <li>Max Tokens: 1000 (sufficient for typical changelogs)</li> <li>Role: User role for single-turn conversation</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#limitations","title":"Limitations","text":"<ul> <li>Requires active internet connection for API calls</li> <li>Limited to repositories with Git history</li> <li>API rate limits apply based on your Anthropic plan</li> <li>Commit message quality affects output quality</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#security-notes","title":"Security Notes","text":"<ul> <li>Store API keys securely in environment variables</li> <li>Never commit <code>.env</code> files to version control</li> <li>Consider using API key rotation for production use</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-24-48/#common-issues","title":"Common Issues","text":"<ol> <li>\"Error reading git log\": Ensure you're running the script from within a Git repository</li> <li>API Authentication Error: Verify your <code>ANTHROPIC_API_KEY</code> is correct and active</li> <li>Permission Denied: Check write permissions for the <code>output</code> directory</li> <li>Module Not Found: Install required dependencies with <code>pip install</code></li> </ol>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/","title":"autodoc tools changelog py 2025 05 31T15 40 50","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#git-changelog-generator","title":"Git Changelog Generator","text":"<p>A Python script that automatically generates professional changelog documentation from Git commit messages using the Anthropic Claude API.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#overview","title":"Overview","text":"<p>This tool extracts recent Git commit messages from your repository and uses AI to transform them into well-structured, readable release notes with proper categorization and markdown formatting.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#features","title":"Features","text":"<ul> <li>Extracts Git commit history automatically</li> <li>AI-powered changelog generation using Claude</li> <li>Structured output with sections (Features, Fixes, Improvements)</li> <li>Timestamped output files</li> <li>Error handling for Git operations</li> <li>Configurable AI model selection</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Git repository (must be run from within a Git repository)</li> <li>Anthropic API account and API key</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#environment-setup","title":"Environment Setup","text":"<p>Create a <code>.env</code> file in your project root:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#environment-variables","title":"Environment Variables","text":"Variable Required Default Description <code>ANTHROPIC_API_KEY</code> Yes None Your Anthropic API key <code>ANTHROPIC_MODEL</code> No <code>claude-sonnet-4-20250514</code> Claude model to use for generation"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#usage","title":"Usage","text":"<pre><code>python changelog_generator.py\n</code></pre> <p>The script will: 1. Extract the last 10 commit messages from your Git repository 2. Send them to Claude for processing and summarization 3. Generate a structured changelog in markdown format 4. Save the output to <code>output/changelog_YYYY-MM-DDTHH-MM-SS.txt</code></p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#output-structure","title":"Output Structure","text":"<p>The generated changelog includes: - Features: New functionality and additions - Fixes: Bug fixes and corrections - Improvements: Enhancements and optimizations - Other: Miscellaneous changes</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling for: - Missing Git repository - Git command failures - API communication errors - File system operations</p> <p>If Git log extraction fails, the script continues with a fallback message rather than crashing.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#file-structure","title":"File Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 changelog_generator.py\n\u251c\u2500\u2500 .env\n\u2514\u2500\u2500 output/\n    \u2514\u2500\u2500 changelog_YYYY-MM-DDTHH-MM-SS.txt\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#customization","title":"Customization","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#modify-commit-count","title":"Modify Commit Count","text":"<p>Change the number of commits to analyze:</p> <pre><code>git_log = subprocess.check_output([\n    \"git\", \"log\", \"--pretty=format:* %s\", \"-n\", \"20\"  # Changed from 10 to 20\n]).decode()\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#customize-ai-prompt","title":"Customize AI Prompt","text":"<p>Modify the <code>prompt</code> variable to change how the AI processes your commits:</p> <pre><code>prompt = f\"\"\"You are a changelog assistant. Create detailed release notes with:\n- Bullet points for each change\n- Technical details preserved\n- Impact assessment for each feature\n\nCommits:\n{git_log}\n\"\"\"\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#change-output-format","title":"Change Output Format","text":"<p>Modify the output file format and location:</p> <pre><code>out_path = f\"releases/CHANGELOG_{timestamp}.md\"  # Different path and extension\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#limitations","title":"Limitations","text":"<ul> <li>Requires active internet connection for API calls</li> <li>Limited to repositories with Git history</li> <li>API rate limits apply based on your Anthropic plan</li> <li>Output quality depends on commit message quality</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#security-notes","title":"Security Notes","text":"<ul> <li>Store API keys securely in <code>.env</code> files</li> <li>Add <code>.env</code> to your <code>.gitignore</code> file</li> <li>Never commit API keys to version control</li> <li>Consider using environment-specific API keys for different deployments</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-40-50/#common-issues","title":"Common Issues","text":"<p>\"Error reading git log\" - Ensure you're running the script from within a Git repository - Verify Git is installed and accessible from command line</p> <p>API Authentication Errors - Check that <code>ANTHROPIC_API_KEY</code> is correctly set in <code>.env</code> - Verify your API key is valid and has sufficient credits</p> <p>Permission Errors - Ensure the script has write permissions for the <code>output/</code> directory - Check file system permissions if output saving fails</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/","title":"autodoc tools changelog py 2025 05 31T15 52 42","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#git-changelog-generator","title":"Git Changelog Generator","text":"<p>A Python utility that automatically generates professional changelog documentation from Git commit messages using the Anthropic Claude API.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#overview","title":"Overview","text":"<p>This tool extracts recent Git commit messages from your repository and uses AI to transform them into well-structured, readable release notes with proper categorization and formatting.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#features","title":"Features","text":"<ul> <li>Extracts commit messages from Git repository</li> <li>AI-powered changelog generation using Anthropic Claude</li> <li>Automatic categorization (Features, Fixes, Improvements)</li> <li>Markdown-formatted output</li> <li>Timestamped file generation</li> <li>Error handling for Git operations</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Git repository (initialized and with commit history)</li> <li>Anthropic API key</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#dependencies","title":"Dependencies","text":"<pre><code>anthropic&gt;=0.3.0\npython-dotenv&gt;=0.19.0\n</code></pre> <p>Install dependencies:</p> <pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in your project root:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre> Variable Required Default Description <code>ANTHROPIC_API_KEY</code> Yes - Your Anthropic API key for Claude access <code>ANTHROPIC_MODEL</code> No <code>claude-sonnet-4-20250514</code> Claude model version to use"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#usage","title":"Usage","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#basic-usage","title":"Basic Usage","text":"<p>Run the script from your Git repository root:</p> <pre><code>python changelog_generator.py\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#output","title":"Output","text":"<p>The tool generates: - A timestamped changelog file in the <code>output/</code> directory - Format: <code>output/changelog_YYYY-MM-DDTHH-MM-SS.txt</code> - Console confirmation with file path</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#example-output-structure","title":"Example Output Structure","text":"<pre><code># Release Notes\n\n## Features\n- Added user authentication system\n- Implemented dashboard analytics\n\n## Fixes  \n- Fixed login validation bug\n- Resolved database connection timeout\n\n## Improvements\n- Enhanced error handling\n- Updated documentation\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#code-structure","title":"Code Structure","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#main-components","title":"Main Components","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#1-environment-setup","title":"1. Environment Setup","text":"<pre><code>load_dotenv()\nclient = anthropic.Anthropic(api_key=os.getenv(\"ANTHROPIC_API_KEY\"))\nmodel = os.getenv(\"ANTHROPIC_MODEL\", \"claude-sonnet-4-20250514\")\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#2-git-log-extraction","title":"2. Git Log Extraction","text":"<pre><code>git_log = subprocess.check_output([\n    \"git\", \"log\", \"--pretty=format:* %s\", \"-n\", \"10\"\n]).decode()\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#3-ai-processing","title":"3. AI Processing","text":"<pre><code>response = client.messages.create(\n    model=model,\n    max_tokens=1000,\n    messages=[{\"role\": \"user\", \"content\": prompt}]\n)\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#4-file-output","title":"4. File Output","text":"<pre><code>timestamp = datetime.now().strftime(\"%Y-%m-%dT%H-%M-%S\")\nout_path = f\"output/changelog_{timestamp}.txt\"\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#configuration-options","title":"Configuration Options","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#commit-history-limit","title":"Commit History Limit","text":"<p>Modify the number of commits to analyze:</p> <pre><code># Change \"-n\", \"10\" to desired number\ngit_log = subprocess.check_output([\n    \"git\", \"log\", \"--pretty=format:* %s\", \"-n\", \"20\"  # Last 20 commits\n]).decode()\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#output-format","title":"Output Format","text":"<p>Customize the AI prompt for different output styles:</p> <pre><code>prompt = f\"\"\"Custom instructions here...\nInclude specific formatting requirements or categorization preferences.\n\nCommits:\n{git_log}\n\"\"\"\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#token-limit","title":"Token Limit","text":"<p>Adjust the response length:</p> <pre><code>response = client.messages.create(\n    model=model,\n    max_tokens=2000,  # Increase for longer changelogs\n    messages=[{\"role\": \"user\", \"content\": prompt}]\n)\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#error-handling","title":"Error Handling","text":"<p>The script includes error handling for:</p> <ul> <li>Git command failures: Gracefully handles repositories without Git history</li> <li>Missing environment variables: Uses default model if not specified</li> <li>API failures: Should be wrapped in try-catch for production use</li> <li>File system operations: Creates output directory if it doesn't exist</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#common-issues","title":"Common Issues","text":"Issue Solution \"No commits found\" Ensure you're in a Git repository with commit history API key errors Verify <code>ANTHROPIC_API_KEY</code> is set correctly in <code>.env</code> Permission errors Check write permissions for <code>output/</code> directory Git command not found Ensure Git is installed and accessible in PATH"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#debug-mode","title":"Debug Mode","text":"<p>Add debug output for troubleshooting:</p> <pre><code>print(f\"\ud83d\udcca Found {len(git_log.split('*'))-1} commits\")\nprint(f\"\ud83e\udd16 Using model: {model}\")\nprint(f\"\ud83d\udcdd Generated {len(notes)} characters\")\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#security-considerations","title":"Security Considerations","text":"<ul> <li>Store API keys in environment variables, never in code</li> <li>Add <code>.env</code> to your <code>.gitignore</code> file</li> <li>Consider API rate limits for large repositories</li> <li>Validate Git command output before processing</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T15-52-42/#license","title":"License","text":"<p>This documentation is provided as-is for the changelog generator utility.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/","title":"autodoc tools changelog py 2025 05 31T16 05 38","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#git-changelog-generator","title":"Git Changelog Generator","text":"<p>A Python script that automatically generates professional release notes from Git commit messages using Anthropic's Claude AI.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#overview","title":"Overview","text":"<p>This tool extracts recent Git commit messages from your repository and uses Claude AI to transform them into well-structured, readable release notes with proper categorization and formatting.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#features","title":"Features","text":"<ul> <li>Extracts Git commit history automatically</li> <li>Uses AI to categorize and summarize changes</li> <li>Generates markdown-formatted release notes</li> <li>Saves timestamped output files</li> <li>Handles errors gracefully</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Git repository</li> <li>Anthropic API key</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#required-dependencies","title":"Required Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#environment-setup","title":"Environment Setup","text":"<p>Create a <code>.env</code> file in your project root:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to this model\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#configuration","title":"Configuration","text":"Environment Variable Description Default Value Required <code>ANTHROPIC_API_KEY</code> Your Anthropic API key None Yes <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code> No"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#usage","title":"Usage","text":"<ol> <li>Navigate to your Git repository directory</li> <li>Ensure your <code>.env</code> file is configured</li> <li>Run the script:</li> </ol> <pre><code>python changelog_generator.py\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#output","title":"Output","text":"<p>The script generates: - File Location: <code>output/changelog_YYYY-MM-DDTHH-MM-SS.txt</code> - Format: Markdown with organized sections (Features, Fixes, Improvements) - Content: AI-processed release notes based on recent commits</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#example-output-structure","title":"Example Output Structure","text":"<pre><code># Release Notes\n\n## Features\n- Added user authentication system\n- Implemented data export functionality\n\n## Fixes  \n- Fixed memory leak in processing module\n- Resolved database connection timeout issues\n\n## Improvements\n- Enhanced error handling and logging\n- Updated documentation\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling:</p> <ul> <li>Git Access Errors: If Git commands fail, continues with placeholder text</li> <li>API Errors: Anthropic client errors are propagated with clear messages</li> <li>File System Errors: Creates output directory if it doesn't exist</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#technical-details","title":"Technical Details","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#git-integration","title":"Git Integration","text":"<ul> <li>Retrieves last 10 commits using <code>git log --pretty=format:\"* %s\" -n 10</code></li> <li>Decodes subprocess output to UTF-8</li> <li>Gracefully handles repositories without commits</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#ai-processing","title":"AI Processing","text":"<ul> <li>Sends structured prompt to Claude for changelog generation</li> <li>Uses configurable model selection</li> <li>Limits response to 1000 tokens for concise output</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#file-management","title":"File Management","text":"<ul> <li>Creates timestamped files to prevent overwrites</li> <li>Ensures output directory exists before writing</li> <li>Uses ISO 8601 timestamp format for file naming</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#customization","title":"Customization","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#modify-commit-count","title":"Modify Commit Count","text":"<p>Change the number of commits to analyze:</p> <pre><code>git_log = subprocess.check_output([\n    \"git\", \"log\", \"--pretty=format:* %s\", \"-n\", \"20\"  # Changed from 10 to 20\n]).decode()\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#customize-ai-prompt","title":"Customize AI Prompt","text":"<p>Modify the prompt variable to change output format:</p> <pre><code>prompt = f\"\"\"Generate release notes in your preferred format:\n- Use bullet points\n- Focus on user-facing changes\n- Group by component\n\nCommits:\n{git_log}\n\"\"\"\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#change-output-location","title":"Change Output Location","text":"<p>Modify the output path:</p> <pre><code>out_path = f\"releases/notes_{timestamp}.md\"  # Custom directory and extension\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#troubleshooting","title":"Troubleshooting","text":"Issue Cause Solution \"No commits found\" Not in Git repo or no commits Ensure you're in a Git repository with commit history API authentication error Missing/invalid API key Verify <code>ANTHROPIC_API_KEY</code> in <code>.env</code> file Permission denied No write access Check permissions for output directory Git command not found Git not installed Install Git and ensure it's in system PATH"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-05-38/#license","title":"License","text":"<p>This script is provided as-is for educational and development purposes.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/","title":"Changelog","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#git-changelog-generator","title":"Git Changelog Generator","text":"<p>A Python utility that automatically generates formatted release notes from Git commit messages using the Anthropic Claude AI model.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#overview","title":"Overview","text":"<p>This tool extracts recent Git commit messages from a repository and uses Claude AI to transform them into well-structured, readable changelog entries organized by categories such as Features, Fixes, and Improvements.</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Git repository (must be run from within a Git repository)</li> <li>Anthropic API key</li> <li>Required Python packages (see Installation)</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Create a <code>.env</code> file in your project root:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, uses default if not specified\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#environment-variables","title":"Environment Variables","text":"Variable Required Default Description <code>ANTHROPIC_API_KEY</code> Yes - Your Anthropic API key for Claude access <code>ANTHROPIC_MODEL</code> No <code>claude-sonnet-4-20250514</code> Claude model version to use"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#customizable-parameters","title":"Customizable Parameters","text":"<p>The script can be easily modified to adjust: - Number of commits to analyze (currently set to 10) - Git log format - Output directory and filename format - AI prompt template</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#usage","title":"Usage","text":"<p>Run the script from within a Git repository:</p> <pre><code>python changelog_generator.py\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#output","title":"Output","text":"<p>The tool generates: - Console output: Success/error messages with file location - File output: Timestamped changelog file in <code>output/</code> directory</p>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#output-file-format","title":"Output File Format","text":"<ul> <li>Location: <code>output/changelog_YYYY-MM-DDTHH-MM-SS.txt</code></li> <li>Content: Markdown-formatted release notes with categorized changes</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#example-output-structure","title":"Example Output Structure","text":"<pre><code>## Features\n- Added new user authentication system\n- Implemented dark mode toggle\n\n## Fixes  \n- Fixed memory leak in data processing\n- Resolved CSS styling issues on mobile\n\n## Improvements\n- Optimized database query performance\n- Enhanced error handling and logging\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling for common scenarios:</p> <ul> <li>Git repository not found: Displays error message and continues with placeholder text</li> <li>Git command failures: Gracefully handles subprocess errors</li> <li>API failures: Anthropic client errors are propagated with clear error messages</li> <li>File system errors: Directory creation and file writing are handled safely</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#technical-details","title":"Technical Details","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#dependencies","title":"Dependencies","text":"<pre><code>import os              # Environment variables and file operations\nimport anthropic       # Claude AI API client\nfrom dotenv import load_dotenv  # Environment variable loading\nfrom datetime import datetime   # Timestamp generation\nimport subprocess      # Git command execution\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#workflow","title":"Workflow","text":"<ol> <li>Environment Setup: Load environment variables and initialize Anthropic client</li> <li>Git Data Extraction: Execute <code>git log</code> command to retrieve commit messages</li> <li>AI Processing: Send commit data to Claude with structured prompt</li> <li>Output Generation: Save formatted changelog with timestamp</li> <li>User Feedback: Display success message with file location</li> </ol>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#git-command-details","title":"Git Command Details","text":"<p>The script executes:</p> <pre><code>git log --pretty=format:\"* %s\" -n 10\n</code></pre> <ul> <li><code>--pretty=format:\"* %s\"</code>: Formats each commit as a bullet point with subject line</li> <li><code>-n 10</code>: Limits to the 10 most recent commits</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#customization","title":"Customization","text":""},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#modifying-commit-count","title":"Modifying Commit Count","text":"<pre><code>git_log = subprocess.check_output([\n    \"git\", \"log\", \"--pretty=format:* %s\", \"-n\", \"20\"  # Change to desired number\n]).decode()\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#custom-prompt-template","title":"Custom Prompt Template","text":"<pre><code>prompt = f\"\"\"Your custom prompt here...\nAvailable variables: {git_log}\n\"\"\"\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#different-output-format","title":"Different Output Format","text":"<pre><code>out_path = f\"output/release_notes_{timestamp}.md\"  # Change extension/naming\n</code></pre>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#limitations","title":"Limitations","text":"<ul> <li>Requires active internet connection for API calls</li> <li>Limited by Anthropic API rate limits and token limits (max 1000 tokens)</li> <li>Quality depends on commit message clarity and detail</li> <li>Must be run from within a Git repository</li> </ul>"},{"location":"autodoc_tools_changelog_py_2025-05-31T16-13-02/#security-notes","title":"Security Notes","text":"<ul> <li>Store API keys securely in <code>.env</code> file</li> <li>Add <code>.env</code> to <code>.gitignore</code> to prevent accidental commits</li> <li>Consider using environment-specific API keys for different deployment stages</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/","title":"autodoc tools claude folder review batched py 2025 05 31T15 25 12","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#code-review-script-documentation","title":"Code Review Script Documentation","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#overview","title":"Overview","text":"<p>A Python script that automatically reviews code folders using Anthropic's Claude AI model. The script processes source code files in batches to stay within token limits and generates detailed code review reports in Markdown format.</p> <p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#features","title":"Features","text":"<ul> <li>Batch Processing: Automatically splits large codebases into manageable batches (~10k token limit)</li> <li>Multi-language Support: Reviews Python, JavaScript, TypeScript, HTML, CSS, JSON, Go, Java, and YAML files</li> <li>Smart Filtering: Excludes test files and directories automatically</li> <li>Structured Output: Generates timestamped Markdown reports for each batch</li> <li>Progress Tracking: Real-time feedback on processing status</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Anthropic API key</li> <li>Required Python packages:</li> <li><code>anthropic</code></li> <li><code>python-dotenv</code></li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Set up environment variables in a <code>.env</code> file:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to this model\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review_script.py [folder_path]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#examples","title":"Examples","text":"<pre><code># Review current directory's parent folder\npython code_review_script.py\n\n# Review specific folder\npython code_review_script.py /path/to/your/project\n\n# Review relative path\npython code_review_script.py ../my-project\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#supported-file-types","title":"Supported File Types","text":"<p>The script processes files with the following extensions: - <code>.py</code> (Python) - <code>.js</code>, <code>.jsx</code> (JavaScript) - <code>.ts</code>, <code>.tsx</code> (TypeScript) - <code>.html</code> (HTML) - <code>.css</code> (CSS) - <code>.json</code> (JSON) - <code>.go</code> (Go) - <code>.java</code> (Java) - <code>.yaml</code>, <code>.yml</code> (YAML)</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#file-exclusions","title":"File Exclusions","text":"<p>Automatically excludes files and directories containing: - \"test\" in filename (case-insensitive) - Files starting with \"test_\" - Files in directories named \"test\"</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#token-limits","title":"Token Limits","text":"<ul> <li>Maximum tokens per batch: 10,000</li> <li>Token estimation: Approximately 4 characters per token</li> <li>Output tokens per batch: Limited to 2,000</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#directory-structure","title":"Directory Structure","text":"<pre><code>output/\n\u2514\u2500\u2500 folder_review/\n    \u251c\u2500\u2500 batch_01_2025-05-31T14-30-45.md\n    \u251c\u2500\u2500 batch_02_2025-05-31T14-31-20.md\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#review-content","title":"Review Content","text":"<p>Each batch report includes: - Code Organization: Analysis of file structure and organization - Bug Patterns: Identification of potential issues and anti-patterns - Architecture Weaknesses: Structural problems and design concerns - Suggestions: Recommendations for modularization and clarity improvements</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling for: - File Reading Errors: Logs errors when files cannot be read - API Errors: Catches and reports Claude API failures - Missing Files: Exits gracefully when no valid files are found</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#common-error-messages","title":"Common Error Messages","text":"<ul> <li><code>\u274c No valid files found in {folder}</code>: No processable files in the specified directory</li> <li><code>[ERR] \u274c Error reading {file_path}</code>: File access or encoding issues</li> <li><code>\u274c Claude API error in batch {i}</code>: API communication problems</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#performance","title":"Performance","text":"<ul> <li>Processing Time: Displayed upon completion in MM:SS format</li> <li>Batch Size: Dynamically calculated based on token estimation</li> <li>File Discovery: Recursive directory traversal with filtering</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#environment-variables","title":"Environment Variables","text":"Variable Description Default Required <code>ANTHROPIC_API_KEY</code> Your Anthropic API key None Yes <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code> No"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#limitations","title":"Limitations","text":"<ul> <li>Token estimation is approximate (4 characters per token)</li> <li>Large files may be split across batches</li> <li>API rate limits may affect processing speed</li> <li>Binary files are not processed</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#common-issues","title":"Common Issues","text":"<ol> <li>No API Key: Ensure <code>ANTHROPIC_API_KEY</code> is set in your <code>.env</code> file</li> <li>No Files Found: Check file extensions and exclusion rules</li> <li>Permission Errors: Ensure read access to the target directory</li> <li>API Quota: Verify your Anthropic API usage limits</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#debug-steps","title":"Debug Steps","text":"<ol> <li>Verify environment setup:</li> </ol> <pre><code>python -c \"from dotenv import load_dotenv; import os; load_dotenv(); print(os.getenv('ANTHROPIC_API_KEY'))\"\n</code></pre> <ol> <li>Check file discovery:</li> </ol> <pre><code>ls -la [target_folder]\n</code></pre> <ol> <li>Validate file extensions against supported types</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-25-12/#license","title":"License","text":"<p>This script is provided as-is for code review automation purposes.</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/","title":"autodoc tools claude folder review batched py 2025 05 31T15 41 12","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#code-review-tool-documentation","title":"Code Review Tool Documentation","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#overview","title":"Overview","text":"<p>A Python script that performs automated code reviews using Anthropic's Claude AI model. The tool analyzes source code files in a specified directory, batching them to stay within token limits, and generates detailed review reports in Markdown format.</p> <p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#features","title":"Features","text":"<ul> <li>Automated Code Review: Leverages Claude AI for intelligent code analysis</li> <li>Batch Processing: Automatically splits large codebases into manageable chunks</li> <li>Multi-language Support: Reviews various file types including Python, JavaScript, TypeScript, HTML, CSS, JSON, Go, Java, and YAML</li> <li>Smart Filtering: Excludes test files and irrelevant content</li> <li>Structured Output: Generates organized Markdown reports with timestamps</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Required packages:</li> <li><code>anthropic</code></li> <li><code>python-dotenv</code></li> <li>Anthropic API key</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Create a <code>.env</code> file in the project root:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review.py [folder_path]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#examples","title":"Examples","text":"<pre><code># Review current directory's parent folder\npython code_review.py\n\n# Review specific folder\npython code_review.py /path/to/your/codebase\n\n# Review relative path\npython code_review.py ../my-project\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#environment-variables","title":"Environment Variables","text":"Variable Description Default <code>ANTHROPIC_API_KEY</code> Your Anthropic API key Required <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#supported-file-types","title":"Supported File Types","text":"<p>The tool processes the following file extensions: - Python: <code>.py</code> - JavaScript/TypeScript: <code>.js</code>, <code>.ts</code>, <code>.tsx</code>, <code>.jsx</code> - Web: <code>.html</code>, <code>.css</code> - Data: <code>.json</code>, <code>.yaml</code>, <code>.yml</code> - Other Languages: <code>.go</code>, <code>.java</code></p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#file-exclusions","title":"File Exclusions","text":"<p>Files are automatically excluded if they: - Contain \"test\" in the filename (case-insensitive) - Start with \"test_\" - Are located in directories containing \"test\"</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#directory-structure","title":"Directory Structure","text":"<pre><code>output/\n\u2514\u2500\u2500 folder_review/\n    \u251c\u2500\u2500 batch_01_2025-05-31T14-30-15.md\n    \u251c\u2500\u2500 batch_02_2025-05-31T14-30-45.md\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#review-content","title":"Review Content","text":"<p>Each batch report includes analysis of: - Code Organization: Structure and file organization patterns - Bug Patterns: Potential issues and vulnerabilities - Architecture Weaknesses: Design flaws and improvement opportunities - Modularization Suggestions: Recommendations for better code structure</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#technical-details","title":"Technical Details","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#token-management","title":"Token Management","text":"<ul> <li>Maximum Tokens per Batch: 10,000 tokens</li> <li>Token Estimation: Approximately 4 characters per token</li> <li>Response Limit: 2,000 tokens per Claude response</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#batching-algorithm","title":"Batching Algorithm","text":"<p>The script intelligently groups files into batches:</p> <ol> <li>Reads each file and estimates token count</li> <li>Groups files until approaching the 10k token limit</li> <li>Creates new batch when limit would be exceeded</li> <li>Processes each batch sequentially</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#error-handling","title":"Error Handling","text":"<ul> <li>File Reading Errors: Logged and skipped, processing continues</li> <li>API Errors: Reported per batch, other batches continue processing</li> <li>Empty Directory: Script exits with error message</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#example-output","title":"Example Output","text":"<pre><code>\ud83d\udd0d Found 23 valid source files in: ../my-project\n\n\ud83d\udce6 Processing batch 1 of 3...\n\u2705 Batch 1 saved to output/folder_review/batch_01_2025-05-31T14-30-15.md\n\ud83d\udce6 Processing batch 2 of 3...\n\u2705 Batch 2 saved to output/folder_review/batch_02_2025-05-31T14-30-45.md\n\ud83d\udce6 Processing batch 3 of 3...\n\u2705 Batch 3 saved to output/folder_review/batch_03_2025-05-31T14-31-12.md\n\ud83c\udf89 All batches complete in 02:34\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#api-usage-and-costs","title":"API Usage and Costs","text":"<ul> <li>Uses Anthropic's Claude API</li> <li>Token usage depends on codebase size</li> <li>Each batch consumes up to 10k input tokens + 2k output tokens</li> <li>Monitor your API usage through Anthropic's dashboard</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#limitations","title":"Limitations","text":"<ul> <li>Token Limits: Large files may need manual splitting</li> <li>Language Support: Limited to predefined file extensions</li> <li>API Dependencies: Requires active internet connection and valid API key</li> <li>Processing Time: Large codebases may take several minutes</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#common-issues","title":"Common Issues","text":"<p>No files found - Check folder path exists - Verify files have supported extensions - Ensure files aren't excluded by test filters</p> <p>API Authentication errors - Verify <code>ANTHROPIC_API_KEY</code> in <code>.env</code> file - Check API key validity and permissions</p> <p>Token limit exceeded - Script automatically handles batching - Very large individual files may cause issues</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#debug-information","title":"Debug Information","text":"<p>The script provides real-time feedback: - File discovery count - Batch processing progress - Error messages with file paths - Total processing time</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-41-12/#contributing","title":"Contributing","text":"<p>To extend functionality:</p> <ol> <li>Add File Types: Modify <code>valid_exts</code> tuple</li> <li>Customize Exclusions: Update <code>is_excluded()</code> function  </li> <li>Adjust Prompts: Modify the Claude prompt for different review focus</li> <li>Change Batching: Adjust <code>MAX_TOKENS</code> constant</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/","title":"autodoc tools claude folder review batched py 2025 05 31T15 53 09","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#code-review-tool-with-claude-ai","title":"Code Review Tool with Claude AI","text":"<p>A Python script that automatically reviews code folders using Anthropic's Claude AI, designed to analyze codebases in batches while respecting token limits.</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#overview","title":"Overview","text":"<p>This tool discovers source files in a specified directory, organizes them into token-limited batches, and uses Claude AI to provide comprehensive code reviews focusing on architecture, organization, and potential improvements.</p> <p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#features","title":"Features","text":"<ul> <li>Automated File Discovery: Recursively scans directories for supported file types</li> <li>Intelligent Batching: Groups files to stay within Claude's token limits (~10k tokens per batch)</li> <li>Test File Exclusion: Automatically excludes test files from review</li> <li>Multi-language Support: Supports Python, JavaScript, TypeScript, HTML, CSS, JSON, Go, Java, and YAML files</li> <li>Markdown Output: Generates structured review reports in Markdown format</li> <li>Progress Tracking: Provides real-time feedback on processing status</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Anthropic API key</li> <li>Required Python packages:</li> <li><code>anthropic</code></li> <li><code>python-dotenv</code></li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Create a <code>.env</code> file in the script directory:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to this model\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#basic-usage","title":"Basic Usage","text":"<p>Review the default folder (<code>../137docs</code>):</p> <pre><code>python code_review.py\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#custom-folder","title":"Custom Folder","text":"<p>Review a specific folder:</p> <pre><code>python code_review.py /path/to/your/code/folder\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#supported-file-types","title":"Supported File Types","text":"<p>The script currently supports the following file extensions:</p> Language Extensions Python <code>.py</code> JavaScript <code>.js</code>, <code>.jsx</code> TypeScript <code>.ts</code>, <code>.tsx</code> Web <code>.html</code>, <code>.css</code> Data <code>.json</code>, <code>.yaml</code>, <code>.yml</code> Go <code>.go</code> Java <code>.java</code>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#file-exclusions","title":"File Exclusions","text":"<p>Files are automatically excluded if they: - Contain \"test\" in the filename (case-insensitive) - Start with \"test_\" - Are located in directories containing \"test\"</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#token-management","title":"Token Management","text":"<ul> <li>Batch Size: Maximum ~10,000 tokens per batch</li> <li>Token Estimation: Approximately 4 characters per token</li> <li>Max Response: 2,000 tokens per Claude response</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#directory-structure","title":"Directory Structure","text":"<p>Reviews are saved to:</p> <pre><code>output/folder_review/\n\u251c\u2500\u2500 batch_01_2025-05-31T14-30-45.md\n\u251c\u2500\u2500 batch_02_2025-05-31T14-31-12.md\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#review-content","title":"Review Content","text":"<p>Each batch review includes analysis of:</p> <ul> <li>Code Organization: Structure and maintainability assessment</li> <li>Bug Patterns: Potential issues and anti-patterns</li> <li>Architecture Weaknesses: Design flaws and improvement opportunities</li> <li>Modularization Suggestions: Recommendations for better code organization</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#example-output","title":"Example Output","text":"<pre><code>\ud83d\udd0d Found 25 valid source files in: /path/to/project\n\n\ud83d\udce6 Processing batch 1 of 3...\n\u2705 Batch 1 saved to output/folder_review/batch_01_2025-05-31T14-30-45.md\n\n\ud83d\udce6 Processing batch 2 of 3...\n\u2705 Batch 2 saved to output/folder_review/batch_02_2025-05-31T14-31-12.md\n\n\ud83d\udce6 Processing batch 3 of 3...\n\u2705 Batch 3 saved to output/folder_review/batch_03_2025-05-31T14-31-38.md\n\n\ud83c\udf89 All batches complete in 02:15\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#error-handling","title":"Error Handling","text":"<p>The script handles several error conditions:</p> <ul> <li>No Valid Files: Exits with error code 1 if no reviewable files are found</li> <li>File Read Errors: Skips unreadable files and continues processing</li> <li>API Errors: Reports Claude API failures while continuing with remaining batches</li> <li>Missing Environment: Requires <code>ANTHROPIC_API_KEY</code> in environment variables</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#limitations","title":"Limitations","text":"<ul> <li>Token Limits: Large files may need to be split manually if they exceed batch limits</li> <li>API Rate Limits: Subject to Anthropic's API rate limiting</li> <li>Language Support: Limited to predefined file extensions</li> <li>Binary Files: Cannot process binary or compiled files</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#customization","title":"Customization","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#adding-file-types","title":"Adding File Types","text":"<p>Modify the <code>valid_exts</code> tuple to include additional file extensions:</p> <pre><code>valid_exts = (\".py\", \".js\", \".ts\", \".tsx\", \".jsx\", \".html\", \".css\", \".json\", \".go\", \".java\", \".yaml\", \".yml\", \".rb\", \".php\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#adjusting-token-limits","title":"Adjusting Token Limits","text":"<p>Modify the <code>MAX_TOKENS</code> constant to change batch sizes:</p> <pre><code>MAX_TOKENS = 15000  # Increase batch size\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#custom-exclusion-rules","title":"Custom Exclusion Rules","text":"<p>Modify the <code>is_excluded()</code> function to change file filtering logic:</p> <pre><code>def is_excluded(filename):\n    lower = filename.lower()\n    return (\"test\" in lower or \n            lower.startswith(\"test_\") or \n            \"node_modules\" in lower or\n            \".git\" in lower)\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#common-issues","title":"Common Issues","text":"<ol> <li>\"No valid files found\": Check that the target directory contains supported file types</li> <li>API Key Error: Ensure <code>ANTHROPIC_API_KEY</code> is set in your <code>.env</code> file</li> <li>Permission Errors: Verify read access to target directory and write access to output directory</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T15-53-09/#debug-information","title":"Debug Information","text":"<p>The script provides verbose output including: - File discovery results - Batch processing progress - Error messages for failed operations - Total processing time</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/","title":"autodoc tools claude folder review batched py 2025 05 31T16 06 00","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#code-review-script-documentation","title":"Code Review Script Documentation","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#overview","title":"Overview","text":"<p>This script provides automated code review functionality using Anthropic's Claude AI model. It analyzes source code files within a specified directory, organizes them into batches to respect API token limits, and generates comprehensive review reports in Markdown format.</p> <p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#features","title":"Features","text":"<ul> <li>Multi-language Support: Reviews Python, JavaScript, TypeScript, HTML, CSS, JSON, Go, Java, and YAML files</li> <li>Intelligent Batching: Automatically groups files to stay within Claude's token limits (~10k tokens per batch)</li> <li>Test File Exclusion: Automatically excludes test files from review</li> <li>Structured Output: Generates organized Markdown reports for each batch</li> <li>Progress Tracking: Provides real-time feedback on processing status</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#required-dependencies","title":"Required Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#environment-setup","title":"Environment Setup","text":"<p>Create a <code>.env</code> file in the script directory with the following variables:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to this model\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review_script.py [folder_path]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#examples","title":"Examples","text":"<pre><code># Review the default folder (../137docs)\npython code_review_script.py\n\n# Review a specific project folder\npython code_review_script.py /path/to/your/project\n\n# Review current directory\npython code_review_script.py .\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#supported-file-types","title":"Supported File Types","text":"<p>The script currently processes files with the following extensions:</p> <ul> <li>Python: <code>.py</code></li> <li>JavaScript/TypeScript: <code>.js</code>, <code>.ts</code>, <code>.tsx</code>, <code>.jsx</code></li> <li>Web: <code>.html</code>, <code>.css</code></li> <li>Data: <code>.json</code>, <code>.yaml</code>, <code>.yml</code></li> <li>Other Languages: <code>.go</code>, <code>.java</code></li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#file-exclusion-rules","title":"File Exclusion Rules","text":"<p>Files are automatically excluded if they: - Contain \"test\" in the filename (case-insensitive) - Start with \"test_\" - Are located in directories containing \"test\"</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#token-limits","title":"Token Limits","text":"<ul> <li>Batch Size: Maximum 10,000 tokens per batch</li> <li>Response Limit: 2,000 tokens per Claude response</li> <li>Token Estimation: Approximately 4 characters per token</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#directory-structure","title":"Directory Structure","text":"<pre><code>output/\n\u2514\u2500\u2500 folder_review/\n    \u251c\u2500\u2500 batch_01_2025-05-31T14-30-45.md\n    \u251c\u2500\u2500 batch_02_2025-05-31T14-31-12.md\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#review-content","title":"Review Content","text":"<p>Each generated report includes analysis of:</p> <ul> <li>Code Organization: Structure and file organization patterns</li> <li>Bug Patterns: Potential issues and anti-patterns</li> <li>Architecture Weaknesses: Design flaws and improvement areas</li> <li>Modularization Suggestions: Recommendations for better code organization</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#error-handling","title":"Error Handling","text":"<p>The script includes comprehensive error handling for:</p> <ul> <li>File Access Errors: Skips unreadable files with error logging</li> <li>API Errors: Continues processing remaining batches if one fails</li> <li>Empty Directories: Exits gracefully with informative message</li> <li>Missing Dependencies: Clear error messages for setup issues</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>Processing Time: Varies based on file count and API response times</li> <li>Rate Limiting: Respects Anthropic's API rate limits</li> <li>Memory Usage: Processes files in batches to minimize memory footprint</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#customization-options","title":"Customization Options","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#adding-file-types","title":"Adding File Types","text":"<p>Modify the <code>valid_exts</code> tuple to include additional file extensions:</p> <pre><code>valid_exts = (\".py\", \".js\", \".ts\", \".your_extension\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#adjusting-token-limits","title":"Adjusting Token Limits","text":"<p>Modify the <code>MAX_TOKENS</code> constant to change batch sizes:</p> <pre><code>MAX_TOKENS = 15000  # Increase for larger batches\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#custom-exclusion-rules","title":"Custom Exclusion Rules","text":"<p>Modify the <code>is_excluded()</code> function to implement custom filtering logic:</p> <pre><code>def is_excluded(filename):\n    # Add your custom exclusion logic here\n    return filename.endswith('.exclude')\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#common-issues","title":"Common Issues","text":"<ol> <li>\"No valid files found\"</li> <li>Verify the target directory contains supported file types</li> <li> <p>Check file permissions</p> </li> <li> <p>API Authentication Errors</p> </li> <li>Verify <code>ANTHROPIC_API_KEY</code> in <code>.env</code> file</li> <li> <p>Ensure API key has sufficient credits</p> </li> <li> <p>Token Limit Exceeded</p> </li> <li>Reduce <code>MAX_TOKENS</code> value</li> <li>Split large files manually</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#debug-mode","title":"Debug Mode","text":"<p>Add debug output by modifying the script to include:</p> <pre><code>print(f\"Debug: Processing {file_path}, estimated tokens: {est}\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-06-00/#license-and-support","title":"License and Support","text":"<p>This script is provided as-is. For issues or feature requests, contact the author or submit issues through your project's issue tracking system.</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/","title":"Batched Review","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#code-review-tool-documentation","title":"Code Review Tool Documentation","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#overview","title":"Overview","text":"<p>A Python script that automatically reviews code folders using Claude AI. The tool intelligently batches files to stay within token limits and generates comprehensive code review reports in Markdown format.</p> <p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#features","title":"Features","text":"<ul> <li>\ud83d\udd0d Multi-language Support: Reviews Python, JavaScript, TypeScript, HTML, CSS, JSON, Go, Java, and YAML files</li> <li>\ud83d\udce6 Intelligent Batching: Automatically groups files to respect API token limits (~10k tokens per batch)</li> <li>\ud83d\udeab Smart Filtering: Excludes test files and unsupported file types</li> <li>\ud83d\udcdd Structured Output: Generates professional Markdown reports with timestamps</li> <li>\u26a1 Progress Tracking: Real-time batch processing status and timing information</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_claude_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review.py [target_folder]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#examples","title":"Examples","text":"<pre><code># Review the default folder (../137docs)\npython code_review.py\n\n# Review a specific project folder\npython code_review.py /path/to/my/project\n\n# Review current directory\npython code_review.py .\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#supported-file-types","title":"Supported File Types","text":"<p>The script currently processes files with the following extensions:</p> <ul> <li>Python: <code>.py</code></li> <li>JavaScript/TypeScript: <code>.js</code>, <code>.ts</code>, <code>.tsx</code>, <code>.jsx</code></li> <li>Web: <code>.html</code>, <code>.css</code></li> <li>Data: <code>.json</code>, <code>.yaml</code>, <code>.yml</code></li> <li>Other Languages: <code>.go</code>, <code>.java</code></li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#file-exclusions","title":"File Exclusions","text":"<p>Files are automatically excluded if they: - Contain \"test\" in the filename (case-insensitive) - Start with \"test_\" - Are located in a \"test\" directory</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#token-limits","title":"Token Limits","text":"<ul> <li>Maximum tokens per batch: 10,000</li> <li>Estimated tokens calculation: <code>text_length / 4</code></li> <li>Output token limit: 2,000 per response</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#output-structure","title":"Output Structure","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#directory-structure","title":"Directory Structure","text":"<pre><code>output/\n\u2514\u2500\u2500 folder_review/\n    \u251c\u2500\u2500 batch_01_2025-05-31T14-30-25.md\n    \u251c\u2500\u2500 batch_02_2025-05-31T14-30-45.md\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#report-content","title":"Report Content","text":"<p>Each batch report includes:</p> <ul> <li>Code Organization analysis</li> <li>Bug Pattern identification  </li> <li>Architecture Weakness assessment</li> <li>Modularization Suggestions</li> <li>Clarity Improvements</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#api-reference","title":"API Reference","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#core-functions","title":"Core Functions","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#is_excludedfilename-str-bool","title":"<code>is_excluded(filename: str) -&gt; bool</code>","text":"<p>Determines if a file should be excluded from review.</p> <p>Parameters: - <code>filename</code> (str): Full file path to evaluate</p> <p>Returns: - <code>bool</code>: True if file should be excluded</p> <p>Example:</p> <pre><code>is_excluded(\"/src/test_utils.py\")  # Returns True\nis_excluded(\"/src/main.py\")       # Returns False\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#estimate_tokenstext-str-int","title":"<code>estimate_tokens(text: str) -&gt; int</code>","text":"<p>Estimates token count for API usage planning.</p> <p>Parameters: - <code>text</code> (str): Text content to estimate</p> <p>Returns: - <code>int</code>: Estimated token count</p> <p>Formula:</p> <pre><code>tokens = len(text) / 4\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#configuration-variables","title":"Configuration Variables","text":"Variable Default Description <code>valid_exts</code> Multiple extensions Tuple of supported file extensions <code>MAX_TOKENS</code> 10000 Maximum tokens per API call <code>output_root</code> \"output/folder_review\" Base output directory"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#error-handling","title":"Error Handling","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#common-error-scenarios","title":"Common Error Scenarios","text":"<ol> <li>No Valid Files Found <code>\u274c No valid files found in /target/folder</code></li> <li>Cause: No files match the supported extensions or all files are excluded</li> <li> <p>Solution: Check file types and exclusion rules</p> </li> <li> <p>File Read Errors <code>[ERR] \u274c Error reading /path/file.py: [Errno 2] No such file or directory</code></p> </li> <li>Cause: File permissions or file system issues</li> <li> <p>Solution: Verify file permissions and path accessibility</p> </li> <li> <p>Claude API Errors <code>\u274c Claude API error in batch 1: Invalid API key</code></p> </li> <li>Cause: Authentication or API issues</li> <li>Solution: Verify ANTHROPIC_API_KEY in <code>.env</code> file</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#exit-codes","title":"Exit Codes","text":"<ul> <li><code>0</code>: Successful completion</li> <li><code>1</code>: No valid files found</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#performance-considerations","title":"Performance Considerations","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#processing-time","title":"Processing Time","text":"<ul> <li>Small projects (&lt; 50 files): Usually &lt; 2 minutes</li> <li>Medium projects (50-200 files): 2-10 minutes  </li> <li>Large projects (200+ files): 10+ minutes</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#api-rate-limits","title":"API Rate Limits","text":"<p>The script processes batches sequentially to respect Claude's rate limits. No built-in delays are implemented, but the natural processing time typically prevents rate limit issues.</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#token-usage-optimization","title":"Token Usage Optimization","text":"<ul> <li>Files are batched efficiently to maximize token usage per API call</li> <li>Only source code files are processed (documentation and assets excluded)</li> <li>Test files are automatically excluded to focus on production code</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#issue-empty-output-files","title":"Issue: Empty Output Files","text":"<p>Symptoms: Generated <code>.md</code> files are empty or contain only headers</p> <p>Solutions: 1. Verify your Claude API key has sufficient credits 2. Check if the model name in <code>.env</code> is correct 3. Ensure files contain valid, readable code</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#issue-no-valid-files-found","title":"Issue: \"No valid files found\"","text":"<p>Symptoms: Script exits immediately with no files processed</p> <p>Solutions: 1. Verify the target folder path is correct 2. Check if files have supported extensions 3. Ensure files aren't being excluded by the test filter</p>"},{"location":"autodoc_tools_claude_folder_review_batched_py_2025-05-31T16-13-29/#issue-api-rate-limiting","title":"Issue: API Rate Limiting","text":"<p>Symptoms: Frequent API errors or timeouts</p> <p>Solutions: 1. Add delays between batches:    ```python    time.sleep(1)  #</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/","title":"autodoc tools claude folder review py 2025 05 31T15 23 59","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#code-review-tool","title":"Code Review Tool","text":"<p>A Python script that automatically reviews entire codebases using Claude AI to provide insights on code organization, architecture, and potential improvements.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#overview","title":"Overview","text":"<p>This tool scans a specified folder for source code files, combines them into a single review request, and uses Anthropic's Claude AI to generate comprehensive code review feedback in Markdown format.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#features","title":"Features","text":"<ul> <li>\ud83d\udd0d Multi-language Support: Reviews Python, JavaScript, TypeScript, JSX, and TSX files</li> <li>\ud83d\udcca Progress Tracking: Real-time progress bar with ETA calculations</li> <li>\ud83e\udd16 AI-Powered Reviews: Leverages Claude AI for intelligent code analysis</li> <li>\ud83d\udcdd Markdown Output: Generates professional review reports</li> <li>\u26a1 Batch Processing: Processes entire codebases in a single operation</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_claude_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review.py [folder_path]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#examples","title":"Examples","text":"<pre><code># Review default folder (../137docs)\npython code_review.py\n\n# Review specific folder\npython code_review.py /path/to/your/project\n\n# Review current directory\npython code_review.py .\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#supported-file-types","title":"Supported File Types","text":"<p>The script currently processes files with the following extensions: - <code>.py</code> (Python) - <code>.js</code> (JavaScript)  - <code>.ts</code> (TypeScript) - <code>.tsx</code> (TypeScript JSX) - <code>.jsx</code> (JavaScript JSX)</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#extending-file-support","title":"Extending File Support","text":"<p>To add more file types, modify the <code>valid_exts</code> tuple:</p> <pre><code>valid_exts = (\".py\", \".js\", \".ts\", \".tsx\", \".jsx\", \".html\", \".css\", \".json\", \".go\", \".java\", \".yaml\", \".yml\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#review-reports","title":"Review Reports","text":"<p>Generated reports are saved to <code>output/folder_review_YYYY-MM-DDTHH-MM-SS.md</code> and include:</p> <ul> <li>Code Organization Analysis</li> <li>Bug Pattern Detection </li> <li>Architecture Weakness Assessment</li> <li>Modularization Suggestions</li> <li>Code Clarity Improvements</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#console-output","title":"Console Output","text":"<p>The script provides real-time feedback including: - File discovery summary - Progress bar with completion percentage - ETA calculations - Successfully processed files - Final summary with processing time</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#api-configuration","title":"API Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#model-selection","title":"Model Selection","text":"<p>The script uses Claude Sonnet 4 by default. You can specify a different model via environment variable:</p> <pre><code>ANTHROPIC_MODEL=claude-3-opus-20240229\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#token-limits","title":"Token Limits","text":"<ul> <li>Max Tokens: 2000 (configurable in code)</li> <li>Rate Limiting: No built-in rate limiting (consider adding for large codebases)</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling for: - Missing or invalid API keys - File read permissions - Claude API failures - Empty directories - Network connectivity issues</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#limitations","title":"Limitations","text":"<ul> <li>File Size: Large files may exceed Claude's context window</li> <li>Token Limits: Very large codebases may hit API token limits</li> <li>Language Context: Code is processed as Python in markdown blocks regardless of actual language</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#common-issues","title":"Common Issues","text":"<p>No files found error:</p> <pre><code>\u274c No valid files found in /path/to/folder\n</code></pre> <ul> <li>Verify the folder path exists</li> <li>Check that files have supported extensions</li> <li>Ensure proper file permissions</li> </ul> <p>API Key errors: - Verify <code>ANTHROPIC_API_KEY</code> is set in <code>.env</code> - Confirm API key has sufficient credits/permissions</p> <p>File permission errors: - Ensure read access to target directory - Check write permissions for <code>output/</code> directory</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#version-history","title":"Version History","text":"<ul> <li>v1.0.0 (2025-05-31): Initial release by Andr\u00e9 Wolke</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-23-59/#author","title":"Author","text":"<p>Andr\u00e9 Wolke Date: 2025-05-31</p> <p>This tool is designed to assist with code reviews and should complement, not replace, human code review processes.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/","title":"autodoc tools claude folder review py 2025 05 31T15 40 00","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#code-review-tool-documentation","title":"Code Review Tool Documentation","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#overview","title":"Overview","text":"<p>A Python-based code review tool that analyzes entire codebases using Anthropic's Claude AI model. The tool scans a specified directory for source code files, aggregates them, and generates comprehensive review insights focusing on code organization, bug patterns, architecture, and improvement suggestions.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#features","title":"Features","text":"<ul> <li>Multi-language Support: Reviews Python, JavaScript, TypeScript, React (JSX/TSX) files</li> <li>Progress Tracking: Real-time progress bar with ETA calculations</li> <li>Automated Output: Generates timestamped Markdown reports</li> <li>Error Handling: Graceful handling of file access errors and API failures</li> <li>Configurable: Environment-based API key and model configuration</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to specified model\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review.py [target_folder]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#examples","title":"Examples","text":"<pre><code># Review default folder (../137docs)\npython code_review.py\n\n# Review specific folder\npython code_review.py ./my-project\n\n# Review current directory\npython code_review.py .\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#supported-file-extensions","title":"Supported File Extensions","text":"<p>Currently supports: - <code>.py</code> (Python) - <code>.js</code> (JavaScript) - <code>.ts</code> (TypeScript) - <code>.tsx</code> (TypeScript React) - <code>.jsx</code> (JavaScript React)</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#extended-file-types-commented","title":"Extended File Types (Commented)","text":"<p>Additional file types can be enabled by modifying the <code>valid_exts</code> variable:</p> <pre><code>valid_exts = (\".py\", \".js\", \".ts\", \".tsx\", \".jsx\", \".html\", \".css\", \".json\", \".go\", \".java\", \".yaml\", \".yml\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#file-structure","title":"File Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 output/\n\u2502   \u2514\u2500\u2500 folder_review_YYYY-MM-DDTHH-MM-SS.md\n\u251c\u2500\u2500 .env\n\u2514\u2500\u2500 code_review.py\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#report-contents","title":"Report Contents","text":"<p>Generated reports include: - Code Organization: Structure and modularity analysis - Bug Patterns: Potential issues and vulnerabilities - Architecture Weaknesses: Design flaws and anti-patterns - Improvement Suggestions: Refactoring and optimization recommendations</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#api-reference","title":"API Reference","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#environment-variables_1","title":"Environment Variables","text":"Variable Description Default Required <code>ANTHROPIC_API_KEY</code> Claude API authentication key None Yes <code>ANTHROPIC_MODEL</code> Claude model version <code>claude-sonnet-4-20250514</code> No"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#command-line-arguments","title":"Command Line Arguments","text":"Position Description Default Required 1 Target folder path <code>../137docs</code> No"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#error-handling","title":"Error Handling","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#common-issues","title":"Common Issues","text":"<ol> <li>No API Key: Ensure <code>ANTHROPIC_API_KEY</code> is set in <code>.env</code></li> <li>No Valid Files: Check folder path and file extensions</li> <li>File Access Errors: Verify read permissions on target files</li> <li>API Limits: Monitor Claude API usage and rate limits</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#error-messages","title":"Error Messages","text":"<ul> <li><code>\u274c No valid files found in {folder}</code> - No supported files in target directory</li> <li><code>[ERR] \u274c Error reading {file_path}: {error}</code> - File access issue</li> <li><code>\u274c Claude API error: {error}</code> - API communication failure</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>File Size: Large codebases may exceed Claude's token limits</li> <li>API Costs: Each review consumes Claude API tokens</li> <li>Processing Time: Review duration scales with codebase size</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#limitations","title":"Limitations","text":"<ol> <li>Token Limits: Combined file content must fit within Claude's context window</li> <li>Binary Files: Only text-based source files are supported</li> <li>Network Dependency: Requires internet connection for Claude API</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#version-history","title":"Version History","text":"<ul> <li>v1.0.0 (2025-05-31): Initial release with folder-based code review functionality</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#author","title":"Author","text":"<p>Andr\u00e9 Wolke Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-40-00/#license","title":"License","text":"<p>Please refer to your project's license file for usage terms and conditions.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/","title":"autodoc tools claude folder review py 2025 05 31T15 51 51","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#code-review-tool-documentation","title":"Code Review Tool Documentation","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#overview","title":"Overview","text":"<p>A Python-based code review tool that leverages Anthropic's Claude AI to perform comprehensive reviews of entire codebases. The tool recursively scans directories for source files, combines them into a single review request, and generates detailed feedback in Markdown format.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#features","title":"Features","text":"<ul> <li>Multi-language Support: Reviews Python, JavaScript, TypeScript, JSX, and TSX files</li> <li>Progress Tracking: Real-time progress bar with ETA calculations</li> <li>Batch Processing: Combines multiple files into a single Claude API request</li> <li>Structured Output: Generates timestamped Markdown reports</li> <li>Error Handling: Graceful handling of file read errors and API failures</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#requirements","title":"Requirements","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to specified model\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#installation","title":"Installation","text":"<ol> <li>Clone or download the script</li> <li>Install required dependencies</li> <li>Configure environment variables</li> <li>Run the script with your target directory</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review.py [target_directory]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#examples","title":"Examples","text":"<pre><code># Review default directory (../137docs)\npython code_review.py\n\n# Review specific directory\npython code_review.py /path/to/your/project\n\n# Review current directory\npython code_review.py .\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#supported-file-extensions","title":"Supported File Extensions","text":"<p>Currently configured to review: - <code>.py</code> (Python) - <code>.js</code> (JavaScript) - <code>.ts</code> (TypeScript) - <code>.tsx</code> (TypeScript JSX) - <code>.jsx</code> (JavaScript JSX)</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#extended-file-support","title":"Extended File Support","text":"<p>The script includes a commented configuration for additional file types:</p> <pre><code># Uncomment and modify to include additional file types\nvalid_exts = (\".py\", \".js\", \".ts\", \".tsx\", \".jsx\", \".html\", \".css\", \".json\", \".go\", \".java\", \".yaml\", \".yml\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#review-report-structure","title":"Review Report Structure","text":"<p>Generated reports include analysis of:</p> <ul> <li>Code Organization: Structure and maintainability assessment</li> <li>Bug Patterns: Potential issues and vulnerabilities</li> <li>Architecture Weaknesses: Design and scalability concerns</li> <li>Improvement Suggestions: Recommendations for refactoring and optimization</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#output-location","title":"Output Location","text":"<p>Reports are saved to: <code>output/folder_review_YYYY-MM-DDTHH-MM-SS.md</code></p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#api-information","title":"API Information","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#model-configuration","title":"Model Configuration","text":"<ul> <li>Default Model: <code>claude-sonnet-4-20250514</code></li> <li>Token Limit: 2,000 tokens per request</li> <li>API Provider: Anthropic Claude</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#rate-limiting","title":"Rate Limiting","text":"<p>The tool makes a single API request per execution, combining all files into one review prompt to minimize API calls and costs.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#error-handling","title":"Error Handling","text":"<p>The script handles several error scenarios:</p> <ul> <li>Missing Files: Graceful handling of unreadable files</li> <li>Empty Directories: Exits with appropriate error message</li> <li>API Failures: Reports Claude API errors without crashing</li> <li>Invalid Paths: Validates directory existence</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#progress-tracking","title":"Progress Tracking","text":"<p>Real-time feedback includes:</p> <ul> <li>Progress Bar: Visual representation of completion status</li> <li>ETA Calculation: Estimated time to completion</li> <li>File Status: Individual file processing confirmation</li> <li>Summary Statistics: Total processing time and file count</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#limitations","title":"Limitations","text":"<ul> <li>Token Constraints: Large codebases may exceed Claude's token limits</li> <li>File Size: Very large individual files may cause processing issues</li> <li>API Costs: Each execution consumes API credits</li> <li>Language Support: Limited to predefined file extensions</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#common-issues","title":"Common Issues","text":"<p>No files found error:</p> <pre><code>\u274c No valid files found in [directory]\n</code></pre> <ul> <li>Verify directory path exists</li> <li>Check file extensions match supported types</li> <li>Ensure files are readable</li> </ul> <p>API authentication error: - Verify <code>ANTHROPIC_API_KEY</code> is set correctly - Check API key permissions and credits</p> <p>Memory/token limit errors: - Review smaller directory subsets - Consider filtering file types - Split large codebases into smaller chunks</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T15-51-51/#version-information","title":"Version Information","text":"<ul> <li>Version: 1.0.0</li> <li>Author: Andr\u00e9 Wolke</li> <li>Date: 2025-05-31</li> <li>License: Not specified</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/","title":"autodoc tools claude folder review py 2025 05 31T16 04 45","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#code-review-tool","title":"Code Review Tool","text":"<p>A Python script that analyzes code folders using Claude AI to provide comprehensive code reviews and architectural insights.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#overview","title":"Overview","text":"<p>This tool recursively scans a specified folder for source code files, combines them into a single review request, and uses Anthropic's Claude AI to generate detailed feedback on code organization, potential bugs, architecture, and improvement suggestions.</p> <p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#features","title":"Features","text":"<ul> <li>\ud83d\udd0d Recursive folder scanning for multiple file types</li> <li>\ud83d\udcca Real-time progress tracking with ETA estimates</li> <li>\ud83e\udd16 AI-powered code review using Claude</li> <li>\ud83d\udcdd Markdown-formatted output reports</li> <li>\u26a1 Configurable file type filtering</li> <li>\ud83d\udee1\ufe0f Error handling and graceful failures</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#dependencies","title":"Dependencies","text":"<p>Install required Python packages:</p> <pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#environment-setup","title":"Environment Setup","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_claude_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514\n</code></pre> <p>Required: - <code>ANTHROPIC_API_KEY</code>: Your Anthropic API key</p> <p>Optional: - <code>ANTHROPIC_MODEL</code>: Claude model to use (defaults to <code>claude-sonnet-4-20250514</code>)</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#basic-usage","title":"Basic Usage","text":"<pre><code>python code_review.py [folder_path]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#examples","title":"Examples","text":"<pre><code># Review current directory\npython code_review.py .\n\n# Review specific folder\npython code_review.py /path/to/project\n\n# Review with default folder (../137docs)\npython code_review.py\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#supported-file-types","title":"Supported File Types","text":"<p>Currently configured to review: - <code>.py</code> (Python) - <code>.js</code> (JavaScript) - <code>.ts</code> (TypeScript) - <code>.tsx</code> (TypeScript React) - <code>.jsx</code> (JavaScript React)</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#extending-file-types","title":"Extending File Types","text":"<p>Uncomment and modify the extended file types list:</p> <pre><code>valid_exts = (\".py\", \".js\", \".ts\", \".tsx\", \".jsx\", \".html\", \".css\", \".json\", \".go\", \".java\", \".yaml\", \".yml\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#file-structure","title":"File Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 output/\n\u2502   \u2514\u2500\u2500 folder_review_2025-05-31T14-30-15.md\n\u251c\u2500\u2500 .env\n\u2514\u2500\u2500 code_review.py\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#review-content","title":"Review Content","text":"<p>Generated reviews include:</p> <ul> <li>Code Organization - Structure and modularity analysis</li> <li>Bug Patterns - Potential issues and vulnerabilities  </li> <li>Architecture Weaknesses - Design flaws and improvement areas</li> <li>Modularization Suggestions - Recommendations for better code organization</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#progress-tracking","title":"Progress Tracking","text":"<p>The tool provides real-time feedback:</p> <pre><code>\ud83d\udd0d Found 15 source files in: ./project\n\n[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2500\u2500\u2500\u2500\u2500\u2500] 80% \u23f1 ETA: 01:23 | \u2705 src/main.py\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#error-handling","title":"Error Handling","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#common-issues","title":"Common Issues","text":"Error Cause Solution <code>\u274c No valid files found</code> No matching file types in folder Check folder path and file extensions <code>\u274c Claude API error</code> Invalid API key or quota exceeded Verify <code>.env</code> configuration <code>[ERR] \u274c Error reading file</code> File permissions or encoding issues Check file accessibility"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#troubleshooting","title":"Troubleshooting","text":"<ol> <li> <p>API Key Issues: <code>bash    # Verify your .env file    cat .env</code></p> </li> <li> <p>File Access Problems: <code>bash    # Check folder permissions    ls -la /path/to/folder</code></p> </li> <li> <p>Module Import Errors: <code>bash    # Install missing dependencies    pip install -r requirements.txt</code></p> </li> </ol>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#api-limits","title":"API Limits","text":"<ul> <li>Max Tokens: 2000 (configurable in code)</li> <li>Rate Limits: Depends on your Anthropic plan</li> <li>File Size: Large codebases may hit token limits</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#customization","title":"Customization","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#modifying-the-review-prompt","title":"Modifying the Review Prompt","text":"<p>Edit the <code>prompt</code> string to customize review focus:</p> <pre><code>prompt = f\"\"\"Custom review instructions here...\n\nFocus on:\n- Your specific requirements\n- Custom analysis criteria\n\nFiles:\n{combined}\n\"\"\"\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#adjusting-progress-bar","title":"Adjusting Progress Bar","text":"<p>Modify the progress bar width:</p> <pre><code>progress_bar = render_progress(idx, total_files, width=50)  # Wider bar\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#best-practices","title":"Best Practices","text":"<ul> <li>\ud83d\udd10 Keep your API key secure and never commit <code>.env</code> files</li> <li>\ud83d\udccf For large codebases, consider reviewing folders separately</li> <li>\ud83d\udd04 Regular reviews help maintain code quality over time</li> <li>\ud83d\udccb Save review outputs for tracking improvements</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-04-45/#license","title":"License","text":"<p>This tool is provided as-is for code review purposes. Ensure compliance with Anthropic's API terms of service.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/","title":"Claude Folder Review","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#code-review-tool","title":"Code Review Tool","text":"<p>A Python script for automated code review using Claude AI. This tool analyzes folders containing source code files and generates comprehensive reviews focusing on code organization, architecture, and potential improvements.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#overview","title":"Overview","text":"<p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p> <p>This script leverages Claude AI to perform intelligent code reviews on entire codebases, providing insights on code quality, architecture patterns, and suggestions for improvements.</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#features","title":"Features","text":"<ul> <li>Multi-file Analysis: Reviews entire folders of source code files</li> <li>Progress Tracking: Real-time progress bar with ETA calculations</li> <li>Multiple Language Support: Supports Python, JavaScript, TypeScript, and React files</li> <li>Markdown Output: Generates professional review reports in Markdown format</li> <li>Error Handling: Robust error handling for file operations and API calls</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#required-dependencies","title":"Required Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#environment-setup","title":"Environment Setup","text":"<p>Create a <code>.env</code> file in the project root with the following variables:</p> <pre><code>ANTHROPIC_API_KEY=your_claude_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#basic-usage","title":"Basic Usage","text":"<pre><code>python review_tool.py [folder_path]\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#examples","title":"Examples","text":"<pre><code># Review default folder (../137docs)\npython review_tool.py\n\n# Review specific folder\npython review_tool.py /path/to/your/codebase\n\n# Review current directory\npython review_tool.py .\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#supported-file-types","title":"Supported File Types","text":"<p>The script currently supports the following file extensions:</p> <ul> <li><code>.py</code> - Python files</li> <li><code>.js</code> - JavaScript files  </li> <li><code>.ts</code> - TypeScript files</li> <li><code>.tsx</code> - TypeScript React files</li> <li><code>.jsx</code> - JavaScript React files</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#extending-file-type-support","title":"Extending File Type Support","text":"<p>To add support for additional file types, modify the <code>valid_exts</code> tuple:</p> <pre><code>valid_exts = (\".py\", \".js\", \".ts\", \".tsx\", \".jsx\", \".html\", \".css\", \".json\", \".go\", \".java\", \".yaml\", \".yml\")\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#model-configuration","title":"Model Configuration","text":"<p>The default model can be changed via environment variable:</p> <pre><code>ANTHROPIC_MODEL=claude-3-opus-20240229\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#review-reports","title":"Review Reports","text":"<p>Generated reviews are saved to the <code>output/</code> directory with timestamps:</p> <pre><code>output/folder_review_2025-05-31T14-30-45.md\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#console-output","title":"Console Output","text":"<p>The script provides real-time feedback including:</p> <ul> <li>File discovery summary</li> <li>Progress bar with ETA</li> <li>List of successfully processed files</li> <li>Total processing time</li> <li>Output file location</li> </ul> <p>Example output:</p> <pre><code>\ud83d\udd0d Found 15 source files in: ../137docs\n\n[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588] 100% \u23f1 ETA: 00:00 | \u2705 main.py\n\n\u2705 Folder review saved to `output/folder_review_2025-05-31T14-30-45.md` in 02:45\n</code></pre>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#review-focus-areas","title":"Review Focus Areas","text":"<p>The Claude AI analysis focuses on:</p> <ul> <li>Code Organization: File structure and module organization</li> <li>Bug Patterns: Common programming errors and potential issues</li> <li>Architecture Weaknesses: Design pattern problems and structural issues</li> <li>Modularization: Suggestions for breaking down complex code</li> <li>Code Clarity: Readability and maintainability improvements</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#error-handling","title":"Error Handling","text":"<p>The script includes comprehensive error handling for:</p> <ul> <li>Missing API Keys: Validates Anthropic API key availability</li> <li>File Access Errors: Handles unreadable files gracefully</li> <li>API Failures: Catches and reports Claude API errors</li> <li>Empty Directories: Exits gracefully when no valid files are found</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#limitations","title":"Limitations","text":"<ul> <li>Token Limits: Claude API has token limits that may affect very large codebases</li> <li>API Rate Limits: Subject to Anthropic's rate limiting policies</li> <li>File Size: Very large individual files may exceed context windows</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#technical-details","title":"Technical Details","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#dependencies","title":"Dependencies","text":"Package Purpose <code>anthropic</code> Claude AI API client <code>python-dotenv</code> Environment variable management <code>os</code>, <code>sys</code> File system and system operations <code>datetime</code>, <code>time</code> Timestamp generation and progress tracking"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#file-processing-flow","title":"File Processing Flow","text":"<ol> <li>Discovery: Recursively scan target directory for valid files</li> <li>Reading: Load file contents with error handling</li> <li>Aggregation: Combine all files into a single prompt</li> <li>Analysis: Send to Claude AI for review</li> <li>Output: Save formatted review to timestamped file</li> </ol>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#progress-calculation","title":"Progress Calculation","text":"<p>The progress bar uses a custom rendering function that calculates: - Completion percentage based on processed files - Average processing time per file - Estimated time remaining (ETA)</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#common-issues","title":"Common Issues","text":"<p>No files found error:</p> <pre><code>\u274c No valid files found in [folder]\n</code></pre> <ul> <li>Verify the folder path exists</li> <li>Check that folder contains files with supported extensions</li> </ul> <p>API key error: - Ensure <code>ANTHROPIC_API_KEY</code> is set in <code>.env</code> file - Verify API key is valid and has sufficient credits</p> <p>File reading errors: - Check file permissions - Ensure files are not corrupted or binary</p>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#debug-tips","title":"Debug Tips","text":"<ul> <li>Run with verbose output by adding print statements</li> <li>Check the <code>output/</code> directory for partial results</li> <li>Verify <code>.env</code> file is in the correct location</li> </ul>"},{"location":"autodoc_tools_claude_folder_review_py_2025-05-31T16-12-08/#contributing","title":"Contributing","text":"<p>To extend or modify this tool:</p> <ol> <li>Add new file extensions to <code>valid_exts</code></li> <li>Modify the Claude prompt for different review focuses</li> <li>Adjust progress bar styling in <code>render_progress()</code></li> <li>Customize output formatting in the file writing section</li> </ol>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/","title":"autodoc tools claude review py 2025 05 31T15 24 22","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#code-review-tool-documentation","title":"Code Review Tool Documentation","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#overview","title":"Overview","text":"<p>A Python script that provides automated code review capabilities using Anthropic's Claude AI. The tool supports two modes of operation: reviewing specific files or analyzing Git diffs to provide structured feedback on code changes.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#features","title":"Features","text":"<ul> <li>Dual Review Modes: Review individual files or Git diffs</li> <li>AI-Powered Analysis: Leverages Claude AI for comprehensive code review</li> <li>Markdown Output: Generates structured, readable review reports</li> <li>Git Integration: Automatically detects and reviews code changes</li> <li>Error Handling: Graceful fallback mechanisms for Git operations</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.6+</li> <li>Required packages:</li> <li><code>anthropic</code></li> <li><code>python-dotenv</code></li> <li>Git (for diff mode)</li> <li>Anthropic API key</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#installation","title":"Installation","text":"<ol> <li>Install required dependencies:</li> </ol> <pre><code>pip install anthropic python-dotenv\n</code></pre> <ol> <li>Set up environment variables in a <code>.env</code> file:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to specified model\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#mode-1-file-review","title":"Mode 1: File Review","text":"<p>Review one or more specific files:</p> <pre><code>python review_tool.py file1.py file2.py\n</code></pre> <p>Example:</p> <pre><code>python review_tool.py src/main.py utils/helpers.py\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#mode-2-git-diff-review","title":"Mode 2: Git Diff Review","text":"<p>Review changes in your Git repository:</p> <pre><code>python review_tool.py\n</code></pre> <p>The tool will attempt to review changes using the following priority: 1. <code>git diff origin/main...HEAD</code> (changes against main branch) 2. <code>git diff HEAD^</code> (changes in the last commit)</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#output","title":"Output","text":"<p>Reviews are saved to the <code>output/</code> directory with timestamped filenames:</p> <ul> <li>File reviews: <code>claude_review_{filename1}_{filename2}_{timestamp}.md</code></li> <li>Git diff reviews: <code>claude_review_git_diff_{source}_{timestamp}.md</code></li> <li>No diff available: <code>claude_review_nodiff_{timestamp}.md</code></li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#review-focus-areas","title":"Review Focus Areas","text":"<p>The Claude AI reviewer analyzes code for:</p> <ul> <li>Bugs and Logic Issues: Potential runtime errors or logical flaws</li> <li>Code Clarity: Readability and maintainability concerns</li> <li>Suggested Improvements: Optimization and enhancement opportunities</li> <li>Style Consistency: Code formatting and naming conventions</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#environment-variables","title":"Environment Variables","text":"Variable Description Default <code>ANTHROPIC_API_KEY</code> Your Anthropic API key Required <code>ANTHROPIC_MODEL</code> Claude model to use <code>claude-sonnet-4-20250514</code>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#api-parameters","title":"API Parameters","text":"<ul> <li>Max Tokens: 1500 (configurable in code)</li> <li>Model: Configurable via environment variable</li> <li>Output Format: Markdown</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#error-handling","title":"Error Handling","text":"<p>The script includes comprehensive error handling:</p> <ul> <li>Missing Files: Skips non-existent files with warnings</li> <li>Git Failures: Falls back to alternative Git commands</li> <li>API Errors: Reports Claude API issues and exits gracefully</li> <li>No Changes: Creates stub output for CI/CD compatibility</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#directory-structure","title":"Directory Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 review_tool.py\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 output/\n\u2502   \u251c\u2500\u2500 claude_review_main_py_2025-05-31T14-30-15.md\n\u2502   \u2514\u2500\u2500 claude_review_git_diff_origin_main_2025-05-31T14-35-22.md\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#exit-codes","title":"Exit Codes","text":"<ul> <li><code>0</code>: Success or graceful handling (no diff available)</li> <li><code>1</code>: API error or critical failure</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#example-output","title":"Example Output","text":"<p>The tool generates structured Markdown reports like:</p> <pre><code># Code Review Report\n\n## Summary\nThe code shows good structure but has several areas for improvement...\n\n## Issues Found\n### Bug: Potential null pointer exception\n- **File**: src/main.py:45\n- **Issue**: Variable may be undefined...\n\n## Suggestions\n1. Add input validation...\n2. Consider using type hints...\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#version-information","title":"Version Information","text":"<ul> <li>Version: 1.0.0</li> <li>Author: Andr\u00e9 Wolke</li> <li>Date: 2025-05-31</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#common-issues","title":"Common Issues","text":"<ol> <li>API Key Error: Ensure <code>ANTHROPIC_API_KEY</code> is set in <code>.env</code></li> <li>Git Not Found: Install Git or run in file mode</li> <li>Permission Errors: Check write permissions for <code>output/</code> directory</li> <li>File Not Found: Verify file paths are correct and accessible</li> </ol>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-24-22/#debug-tips","title":"Debug Tips","text":"<ul> <li>Check that the <code>.env</code> file is in the same directory as the script</li> <li>Verify Git repository is properly initialized</li> <li>Ensure sufficient API credits are available</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/","title":"autodoc tools claude review py 2025 05 31T15 40 22","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#claude-code-review-tool","title":"Claude Code Review Tool","text":"<p>A Python utility for performing automated code reviews using Anthropic's Claude AI. This tool can review individual files or analyze Git diffs to provide structured feedback on code quality, bugs, and improvements.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#overview","title":"Overview","text":"<p>Author: Andr\u00e9 Wolke Version: 1.0.0 Date: 2025-05-31</p> <p>This script leverages Claude AI to perform comprehensive code reviews, supporting two primary modes of operation: - Manual file review for specific files - Automated Git diff analysis</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#features","title":"Features","text":"<ul> <li>Dual Review Modes: Review specific files or Git diffs</li> <li>Markdown Output: Generates structured, readable review reports</li> <li>Intelligent Git Diff: Automatically tries multiple Git diff strategies</li> <li>Error Handling: Graceful handling of missing files and Git errors</li> <li>Timestamped Output: Organized review files with timestamps</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#required-dependencies","title":"Required Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in your project root with the following variables:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to specified model\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#required-tools","title":"Required Tools","text":"<ul> <li>Git: Must be available in your system PATH for diff functionality</li> <li>Python 3.6+: Required for f-string support and modern syntax</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#mode-1-manual-file-review","title":"Mode 1: Manual File Review","text":"<p>Review one or more specific files:</p> <pre><code>python review_script.py file1.py file2.py\n</code></pre> <p>Example:</p> <pre><code>python review_script.py src/main.py utils/helper.py\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#mode-2-git-diff-review","title":"Mode 2: Git Diff Review","text":"<p>Review changes in your Git repository:</p> <pre><code>python review_script.py\n</code></pre> <p>The script automatically attempts the following Git diff strategies in order: 1. <code>git diff origin/main...HEAD</code> - Compare with origin/main branch 2. <code>git diff HEAD^</code> - Compare with previous commit 3. Generate stub output if no Git history is available</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#file-structure","title":"File Structure","text":"<p>All reviews are saved to the <code>output/</code> directory with the following naming convention:</p> <pre><code>output/claude_review_{identifier}_{timestamp}.md\n</code></pre> <p>Examples: - <code>claude_review_main_py_utils_py_2025-05-31T14-30-15.md</code> - <code>claude_review_git_diff_origin_main_2025-05-31T14-30-15.md</code></p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#review-content","title":"Review Content","text":"<p>Generated reviews focus on:</p> <ul> <li>Bug Detection: Identification of logic errors and potential issues</li> <li>Code Clarity: Readability and maintainability suggestions  </li> <li>Improvement Recommendations: Performance and best practice suggestions</li> <li>Style Consistency: Code formatting and convention adherence</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#error-handling","title":"Error Handling","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#missing-files","title":"Missing Files","text":"<ul> <li>Non-existent files are skipped with warning messages</li> <li>Review continues with available files</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#git-errors","title":"Git Errors","text":"<ul> <li>Graceful fallback between Git diff strategies</li> <li>Generates stub output when no Git history is available</li> <li>Prevents CI/CD pipeline failures</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#api-errors","title":"API Errors","text":"<ul> <li>Claude API errors are caught and reported</li> <li>Script exits with error code 1 for proper CI integration</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#model-selection","title":"Model Selection","text":"<p>Customize the Claude model by setting the <code>ANTHROPIC_MODEL</code> environment variable:</p> <pre><code>ANTHROPIC_MODEL=claude-3-opus-20240229\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#token-limits","title":"Token Limits","text":"<p>The current configuration uses a maximum of 1,500 tokens for responses. Modify the <code>max_tokens</code> parameter in the code to adjust:</p> <pre><code>response = client.messages.create(\n    model=model,\n    max_tokens=1500,  # Adjust as needed\n    messages=[{\"role\": \"user\", \"content\": prompt}]\n)\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#integration-examples","title":"Integration Examples","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#cicd-pipeline","title":"CI/CD Pipeline","text":"<pre><code># Example GitHub Actions step\n- name: Code Review with Claude\n  run: python review_script.py\n  env:\n    ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#pre-commit-hook","title":"Pre-commit Hook","text":"<pre><code>#!/bin/sh\n# .git/hooks/pre-commit\npython review_script.py $(git diff --cached --name-only --diff-filter=ACM | grep '\\.py$')\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#limitations","title":"Limitations","text":"<ul> <li>Python Files Only: Currently optimized for Python code review</li> <li>Token Constraints: Large diffs may be truncated due to API token limits</li> <li>API Dependency: Requires active Anthropic API access</li> <li>Git Dependency: Git diff mode requires Git repository context</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#common-issues","title":"Common Issues","text":"<p>\"Module not found\" errors:</p> <pre><code>pip install anthropic python-dotenv\n</code></pre> <p>\"API key not found\" errors: - Verify <code>.env</code> file exists and contains <code>ANTHROPIC_API_KEY</code> - Ensure <code>.env</code> file is in the same directory as the script</p> <p>Git diff failures: - Ensure you're running the script within a Git repository - Check that you have commit history available</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#debug-mode","title":"Debug Mode","text":"<p>Add debug output by modifying the script to include verbose logging:</p> <pre><code>import logging\nlogging.basicConfig(level=logging.DEBUG)\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-40-22/#license","title":"License","text":"<p>This tool is provided as-is for code review automation purposes. Ensure compliance with your organization's AI tool usage policies before deployment.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/","title":"autodoc tools claude review py 2025 05 31T15 52 15","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#code-review-tool-documentation","title":"Code Review Tool Documentation","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#overview","title":"Overview","text":"<p>A Python script that provides automated code review functionality using Claude AI. The tool supports reviewing individual files or Git diffs, generating structured feedback in Markdown format.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#features","title":"Features","text":"<ul> <li>Dual Mode Operation: Review specific files or Git diffs automatically</li> <li>AI-Powered Analysis: Leverages Claude AI for comprehensive code review</li> <li>Markdown Output: Generates professional, formatted review reports</li> <li>Git Integration: Smart Git diff detection with fallback options</li> <li>Error Handling: Robust error handling with graceful degradation</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#prerequisites","title":"Prerequisites","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#dependencies","title":"Dependencies","text":"<pre><code>pip install anthropic python-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_claude_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to this model\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#system-requirements","title":"System Requirements","text":"<ul> <li>Python 3.6+</li> <li>Git (for diff mode)</li> <li>Valid Anthropic API key</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#mode-1-file-review","title":"Mode 1: File Review","text":"<p>Review one or more specific files:</p> <pre><code>python review_tool.py file1.py file2.py\n</code></pre> <p>Example:</p> <pre><code>python review_tool.py src/main.py utils/helpers.py\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#mode-2-git-diff-review","title":"Mode 2: Git Diff Review","text":"<p>Review changes in Git repository (no arguments):</p> <pre><code>python review_tool.py\n</code></pre> <p>The tool automatically attempts the following Git commands in order: 1. <code>git diff origin/main...HEAD</code> (compare with origin/main) 2. <code>git diff HEAD^</code> (compare with previous commit)</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#output","title":"Output","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#file-structure","title":"File Structure","text":"<p>All reviews are saved to the <code>output/</code> directory with timestamped filenames:</p> <pre><code>output/\n\u251c\u2500\u2500 claude_review_main_py_2025-05-31T14-30-15.md\n\u251c\u2500\u2500 claude_review_git_diff_origin_main_2025-05-31T14-45-22.md\n\u2514\u2500\u2500 claude_review_nodiff_2025-05-31T15-00-33.md\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#review-content","title":"Review Content","text":"<p>Each review includes analysis of:</p> <ul> <li>Bugs or Logic Issues: Potential runtime errors or logical flaws</li> <li>Code Clarity: Readability and maintainability concerns  </li> <li>Suggested Improvements: Optimization and enhancement recommendations</li> <li>Style Consistency: Code formatting and convention adherence</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#model-selection","title":"Model Selection","text":"<p>Override the default Claude model via environment variable:</p> <pre><code>ANTHROPIC_MODEL=claude-3-opus-20240229\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#api-limits","title":"API Limits","text":"<p>The tool is configured with: - Max Tokens: 1500 (suitable for comprehensive reviews) - Model: Claude Sonnet 4 (default)</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#error-handling","title":"Error Handling","text":"Scenario Behavior Missing file Skips file with warning, continues processing No Git history Creates stub review file, exits gracefully API failure Displays error message, exits with code 1 Missing API key Anthropic client initialization fails"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#examples","title":"Examples","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#successful-file-review","title":"Successful File Review","text":"<pre><code>$ python review_tool.py app.py\n\u2705 Markdown review saved to output/claude_review_app_py_2025-05-31T14-30-15.md\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#git-diff-review","title":"Git Diff Review","text":"<pre><code>$ python review_tool.py\n\ud83d\udce6 Trying `git diff origin/main...HEAD`...\n\u2705 Markdown review saved to output/claude_review_git_diff_origin_main_2025-05-31T14-45-22.md\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#no-changes-available","title":"No Changes Available","text":"<pre><code>$ python review_tool.py\n\ud83d\udce6 Trying `git diff origin/main...HEAD`...\n\u26a0\ufe0f `origin/main` not found. Trying HEAD^...\n\u274c Git diff failed. No usable revision history.\n\ud83d\udcdd Stub review saved to output/claude_review_nodiff_2025-05-31T15-00-33.md\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#integration","title":"Integration","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#cicd-pipeline","title":"CI/CD Pipeline","text":"<p>The tool is designed for CI/CD integration:</p> <ul> <li>Exits gracefully when no diff is available</li> <li>Creates output files for artifact collection</li> <li>Uses appropriate exit codes for pipeline control</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#git-hooks","title":"Git Hooks","text":"<p>Can be integrated as a pre-commit or pre-push hook for automated code review.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#common-issues","title":"Common Issues","text":"<p>API Key Error</p> <pre><code>\u274c Claude API error: Authentication failed\n</code></pre> <p>Solution: Verify <code>ANTHROPIC_API_KEY</code> in <code>.env</code> file</p> <p>Git Command Failed</p> <pre><code>\u274c Git diff failed. No usable revision history.\n</code></pre> <p>Solution: Ensure you're in a Git repository with commit history</p> <p>File Not Found</p> <pre><code>\u26a0\ufe0f Skipping missing file: nonexistent.py\n</code></pre> <p>Solution: Verify file paths are correct and files exist</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#debug-tips","title":"Debug Tips","text":"<ol> <li>Check environment variables: <code>echo $ANTHROPIC_API_KEY</code></li> <li>Verify Git status: <code>git status</code></li> <li>Test Git diff manually: <code>git diff origin/main...HEAD</code></li> <li>Confirm file permissions and paths</li> </ol>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T15-52-15/#version-information","title":"Version Information","text":"<ul> <li>Version: 1.0.0</li> <li>Author: Andr\u00e9 Wolke  </li> <li>Date: 2025-05-31</li> <li>License: Not specified</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/","title":"autodoc tools claude review py 2025 05 31T16 05 12","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#code-review-script-documentation","title":"Code Review Script Documentation","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#overview","title":"Overview","text":"<p>This Python script provides automated code review functionality using Anthropic's Claude AI. It supports two modes of operation: reviewing individual files or analyzing Git diffs. The script generates structured feedback in Markdown format and saves the results to an output directory.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#features","title":"Features","text":"<ul> <li>Dual Mode Operation: Review specific files or Git diffs</li> <li>Claude AI Integration: Leverages Anthropic's Claude for intelligent code analysis</li> <li>Markdown Output: Generates professional, formatted review reports</li> <li>Git Integration: Automatically detects and reviews code changes</li> <li>Error Handling: Graceful fallback mechanisms for various failure scenarios</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#requirements","title":"Requirements","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#dependencies","title":"Dependencies","text":"<pre><code>anthropic\npython-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root with the following variables:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, uses default if not specified\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#installation","title":"Installation","text":"<ol> <li> <p>Install required packages:    <code>bash    pip install anthropic python-dotenv</code></p> </li> <li> <p>Set up your environment variables in a <code>.env</code> file</p> </li> <li> <p>Ensure the script has appropriate permissions to create directories and files</p> </li> </ol>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#mode-1-file-review","title":"Mode 1: File Review","text":"<p>Review one or more specific files:</p> <pre><code>python review_script.py file1.py file2.py [additional_files...]\n</code></pre> <p>Example:</p> <pre><code>python review_script.py src/main.py tests/test_main.py\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#mode-2-git-diff-review","title":"Mode 2: Git Diff Review","text":"<p>Review changes in your Git repository:</p> <pre><code>python review_script.py\n</code></pre> <p>The script will attempt to review changes using the following Git diff strategies in order: 1. <code>git diff origin/main...HEAD</code> - Compare current branch with origin/main 2. <code>git diff HEAD^</code> - Compare with previous commit 3. Generate stub output if no diffs are available</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#output","title":"Output","text":"<p>All reviews are saved to the <code>output/</code> directory with timestamped filenames:</p> <ul> <li>File reviews: <code>claude_review_{filename1}_{filename2}_{timestamp}.md</code></li> <li>Git diff reviews: <code>claude_review_git_diff_{strategy}_{timestamp}.md</code></li> <li>No diff available: <code>claude_review_nodiff_{timestamp}.md</code></li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#review-focus-areas","title":"Review Focus Areas","text":"<p>The Claude AI reviewer analyzes code for:</p> <ul> <li>Bugs and Logic Issues: Identifies potential runtime errors and logical flaws</li> <li>Code Clarity: Evaluates readability and maintainability</li> <li>Suggested Improvements: Provides actionable recommendations</li> <li>Style Consistency: Checks adherence to coding standards</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#error-handling","title":"Error Handling","text":"Scenario Behavior Missing file Skips file with warning message Git diff failure Falls back to alternative diff strategy No Git history Creates stub review file Claude API error Exits with error code 1 Missing API key Runtime error from Anthropic client"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#file-structure","title":"File Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 review_script.py\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 output/\n\u2502   \u251c\u2500\u2500 claude_review_main_py_2025-05-31T14-30-15.md\n\u2502   \u2514\u2500\u2500 claude_review_git_diff_origin_main_2025-05-31T14-35-22.md\n\u2514\u2500\u2500 [your code files]\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#model-selection","title":"Model Selection","text":"<p>The default model is <code>claude-sonnet-4-20250514</code>. To use a different model, set the <code>ANTHROPIC_MODEL</code> environment variable:</p> <pre><code>ANTHROPIC_MODEL=claude-3-opus-20240229\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#token-limit","title":"Token Limit","text":"<p>The script uses a maximum of 1500 tokens for responses. This can be modified by changing the <code>max_tokens</code> parameter in the API call.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#troubleshooting","title":"Troubleshooting","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#common-issues","title":"Common Issues","text":"<ol> <li>\"No module named 'anthropic'\"</li> <li> <p>Install dependencies: <code>pip install anthropic python-dotenv</code></p> </li> <li> <p>\"API key not found\"</p> </li> <li>Verify <code>.env</code> file exists and contains <code>ANTHROPIC_API_KEY</code></li> <li> <p>Ensure <code>.env</code> is in the same directory as the script</p> </li> <li> <p>\"Git diff failed\"</p> </li> <li>Ensure you're in a Git repository</li> <li>Check that you have commit history</li> <li> <p>Verify Git is installed and accessible</p> </li> <li> <p>\"Permission denied\" when creating output</p> </li> <li>Ensure write permissions for the script directory</li> <li>Check if <code>output/</code> directory can be created</li> </ol>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#debug-tips","title":"Debug Tips","text":"<ul> <li>Check if environment variables are loaded: <code>print(os.getenv(\"ANTHROPIC_API_KEY\"))</code></li> <li>Verify Git repository status: <code>git status</code></li> <li>Test API connectivity with a simple Claude API call</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#version-information","title":"Version Information","text":"<ul> <li>Author: Andr\u00e9 Wolke</li> <li>Version: 1.0.0</li> <li>Date: 2025-05-31</li> <li>License: Not specified</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-05-12/#contributing","title":"Contributing","text":"<p>When modifying this script, ensure: - Error handling remains comprehensive - Output format stays consistent - Environment variable usage is documented - Both review modes continue to function properly</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/","title":"Claude Review","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#claude-code-review-script","title":"Claude Code Review Script","text":"<p>A Python script that leverages Anthropic's Claude AI to perform code reviews on individual files or Git diffs.</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#overview","title":"Overview","text":"<p>This script provides automated code review functionality using Claude AI. It supports two modes of operation: - Manual File Review: Review specific files by providing file paths as arguments - Git Diff Review: Automatically review changes between Git revisions</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#features","title":"Features","text":"<ul> <li>\ud83e\udd16 AI-powered code review using Claude</li> <li>\ud83d\udcc1 Review single or multiple files</li> <li>\ud83d\udd04 Automatic Git diff analysis</li> <li>\ud83d\udcdd Markdown-formatted output</li> <li>\ud83d\udee1\ufe0f Error handling and fallback mechanisms</li> <li>\u23f0 Timestamped review files</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#requirements","title":"Requirements","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#dependencies","title":"Dependencies","text":"<pre><code>anthropic\npython-dotenv\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root:</p> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\nANTHROPIC_MODEL=claude-sonnet-4-20250514  # Optional, defaults to claude-sonnet-4-20250514\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#installation","title":"Installation","text":"<ol> <li> <p>Install required packages:    <code>bash    pip install anthropic python-dotenv</code></p> </li> <li> <p>Set up your environment variables in a <code>.env</code> file</p> </li> <li> <p>Ensure Git is installed and configured (for diff mode)</p> </li> </ol>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#usage","title":"Usage","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#mode-1-manual-file-review","title":"Mode 1: Manual File Review","text":"<p>Review specific files by providing their paths as command-line arguments:</p> <pre><code>python review_script.py file1.py file2.py\n</code></pre> <p>Example:</p> <pre><code>python review_script.py src/main.py utils/helpers.py\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#mode-2-git-diff-review","title":"Mode 2: Git Diff Review","text":"<p>Run without arguments to automatically review Git changes:</p> <pre><code>python review_script.py\n</code></pre> <p>The script will attempt to review changes in the following order: 1. <code>git diff origin/main...HEAD</code> - Changes between origin/main and current HEAD 2. <code>git diff HEAD^</code> - Changes in the last commit (fallback)</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#output","title":"Output","text":"<p>Reviews are saved as Markdown files in the <code>output/</code> directory with timestamps:</p> <ul> <li>File reviews: <code>claude_review_{filename}_{timestamp}.md</code></li> <li>Git diff reviews: <code>claude_review_git_diff_{type}_{timestamp}.md</code></li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#sample-output-structure","title":"Sample Output Structure","text":"<p>The generated reviews focus on: - \ud83d\udc1b Bugs or logic issues - \ud83d\udd0d Code clarity and readability - \ud83d\udca1 Suggested improvements - \ud83c\udfa8 Style consistency</p>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#error-handling","title":"Error Handling","text":"<p>The script includes robust error handling:</p> <ul> <li>Missing files: Skips non-existent files with warnings</li> <li>Git failures: Falls back to previous commit diff</li> <li>API errors: Exits gracefully with error messages</li> <li>No diff available: Creates stub output to prevent CI failures</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#file-structure","title":"File Structure","text":"<pre><code>project/\n\u251c\u2500\u2500 review_script.py\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 output/\n\u2502   \u2514\u2500\u2500 claude_review_*.md\n\u2514\u2500\u2500 requirements.txt\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#configuration","title":"Configuration","text":""},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#model-selection","title":"Model Selection","text":"<p>Change the Claude model by setting the <code>ANTHROPIC_MODEL</code> environment variable:</p> <pre><code>ANTHROPIC_MODEL=claude-3-opus-20240229\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#output-directory","title":"Output Directory","text":"<p>The script automatically creates an <code>output/</code> directory. To change this, modify the following line:</p> <pre><code>os.makedirs(\"output\", exist_ok=True)\n</code></pre>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#exit-codes","title":"Exit Codes","text":"<ul> <li><code>0</code>: Success</li> <li><code>1</code>: API error or other failure</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#limitations","title":"Limitations","text":"<ul> <li>Requires valid Anthropic API key and sufficient credits</li> <li>Git diff mode requires a Git repository with commit history</li> <li>File content is limited by Claude's token limits (currently set to 1500 max tokens for responses)</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#version-information","title":"Version Information","text":"<ul> <li>Version: 1.0.0</li> <li>Author: Andr\u00e9 Wolke</li> <li>Date: 2025-05-31</li> </ul>"},{"location":"autodoc_tools_claude_review_py_2025-05-31T16-12-40/#contributing","title":"Contributing","text":"<p>When modifying the script, ensure: - Error handling remains robust - Output format stays consistent - Both review modes continue to work - Environment variable handling is secure</p>"}]}